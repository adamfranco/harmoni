<?require_once(OKI2."osid/repository/PartIterator.php");require_once(HARMONI."oki2/shared/HarmoniIterator.class.php");/** * PartIterator provides access to these objects sequentially, one at a time. * The purpose of all Iterators is to to offer a way for OSID methods to * return multiple values of a common type and not use an array.  Returning an * array may not be appropriate if the number of values returned is large or * is fetched remotely.	 Iterators do not allow access to values by index, * rather you must access values in sequence. Similarly, there is no way to go * backwards through the sequence unless you place the values in a data * structure, such as an array, that allows for access by index. *  * <p> * OSID Version: 2.0 * </p> *  * @package harmoni.XXXX.YYYYYY *  * @copyright Copyright &copy;2005, Middlebury College * @license http://www.gnu.org/copyleft/gpl.html GNU General Public License * * @version $Id: HarmoniPartIterator.class.php,v 1.3 2005/01/20 21:07:44 thebravecowboy Exp $  */// public static final String NO_MORE_ITERATOR_ELEMENTS = "Iterator has no more elements "define("NO_MORE_ITERATOR_ELEMENTS","Iterator has no more elements ");class HarmoniPartIterator	extends HarmoniIterator	//implements PartIterator{ // begin PartIterator		/**	 * Return true if there is an additional  Part ; false otherwise.	 *		 * @return boolean	 * 	 * @throws object RepositoryException An exception with one of	 *		   the following messages defined in	 *		   org.osid.repository.RepositoryException may be thrown: {@link	 *		   org.osid.repository.RepositoryException#OPERATION_FAILED	 *		   OPERATION_FAILED}, {@link	 *		   org.osid.repository.RepositoryException#PERMISSION_DENIED	 *		   PERMISSION_DENIED}, {@link	 *		   org.osid.repository.RepositoryException#CONFIGURATION_ERROR	 *		   CONFIGURATION_ERROR}, {@link	 *		   org.osid.repository.RepositoryException#UNIMPLEMENTED	 *		   UNIMPLEMENTED}	 * 	 * @public	 */	function hasNextPart () { 		return $this->hasNext();	}	/**	 * Return the next Part.	 *		 * @return object Part	 * 	 * @throws object RepositoryException An exception with one of	 *		   the following messages defined in	 *		   org.osid.repository.RepositoryException may be thrown: {@link	 *		   org.osid.repository.RepositoryException#OPERATION_FAILED	 *		   OPERATION_FAILED}, {@link	 *		   org.osid.repository.RepositoryException#PERMISSION_DENIED	 *		   PERMISSION_DENIED}, {@link	 *		   org.osid.repository.RepositoryException#CONFIGURATION_ERROR	 *		   CONFIGURATION_ERROR}, {@link	 *		   org.osid.repository.RepositoryException#UNIMPLEMENTED	 *		   UNIMPLEMENTED}, {@link	 *		   org.osid.repository.RepositoryException#NO_MORE_ITERATOR_ELEMENTS	 *		   NO_MORE_ITERATOR_ELEMENTS}	 * 	 * @public	 */	function &nextPart () { 		return $this->next();	}} // end InfoFieldIterator?>