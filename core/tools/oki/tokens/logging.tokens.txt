     [java] 830 COPYRIGHT 2 osid.SidLicense
     [java] 871 ALWAYS_EXTENDS 0 java.io.Serializable
     [java] 872 ALWAYS_THROWS 0 osid.logging.LoggingException
     [java] 851 API_PACKAGE 0 osid.logging
     [java] 852 IMPL_PACKAGE 0 osid.logging.skel
     [java] 836 MAKE_IMPL 0 null
     [java] 822 BEGIN 0 null
     [java] 840 COMMENT 0  /**
     [java] 840 COMMENT 0 LoggingManager allows the application developer to create, delete, and get logs for reading or writing.  All log Entries have a formatType, a priorityType, and a timestamp. <p>SID Version: 1.0 rc6 <p>Licensed under the {@link osid.SidLicense MIT O.K.I&#46; SID Definition License}.
     [java] 840 COMMENT 0    */
     [java] 111 API_INTERFACE 1 LoggingManager
     [java] 120 EXTENDS 1 osid.OsidManager
     [java] 840 COMMENT 0   /**
     [java] 840 COMMENT 0 Return the format types available with this implementation.
     [java] 840 COMMENT 0 @return osid.shared.TypeIterator  Iterators return a group of items, one item at a time.  The Iterator's hasNext method returns <code>true</code> if there are additional objects available; <code>false</code> otherwise.  The Iterator's next method returns the next object.
     [java] 840 COMMENT 0 @throws osid.logging.LoggingException An exception with one of the following messages defined in osid.logging.LoggingException:  {@link osid.logging.LoggingException#UNIMPLEMENTED UNIMPLEMENTED}, {@link osid.logging.LoggingException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.logging.LoggingException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.logging.LoggingException#PERMISSION_DENIED PERMISSION_DENIED}
     [java] 840 COMMENT 0   */
     [java] 220 METHOD 1 osid.shared.TypeIterator getFormatTypes()
     [java] 840 COMMENT 0   /**
     [java] 840 COMMENT 0 Return the priority types available with this implementation.
     [java] 840 COMMENT 0 @return osid.shared.TypeIterator  Iterators return a group of items, one item at a time.  The Iterator's hasNext method returns <code>true</code> if there are additional objects available; <code>false</code> otherwise.  The Iterator's next method returns the next object.
     [java] 840 COMMENT 0 @throws osid.logging.LoggingException An exception with one of the following messages defined in osid.logging.LoggingException:  {@link osid.logging.LoggingException#UNIMPLEMENTED UNIMPLEMENTED}, {@link osid.logging.LoggingException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.logging.LoggingException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.logging.LoggingException#PERMISSION_DENIED PERMISSION_DENIED}
     [java] 840 COMMENT 0   */
     [java] 220 METHOD 1 osid.shared.TypeIterator getPriorityTypes()
     [java] 840 COMMENT 0   /**
     [java] 840 COMMENT 0 Return the names of writable Logs.
     [java] 840 COMMENT 0 @return osid.shared.StringIterator  Iterators return a group of items, one item at a time.  The Iterator's hasNext method returns <code>true</code> if there are additional objects available; <code>false</code> otherwise.  The Iterator's next method returns the next object.
     [java] 840 COMMENT 0 @throws osid.logging.LoggingException An exception with one of the following messages defined in osid.logging.LoggingException:  {@link osid.logging.LoggingException#UNIMPLEMENTED UNIMPLEMENTED}, {@link osid.logging.LoggingException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.logging.LoggingException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.logging.LoggingException#PERMISSION_DENIED PERMISSION_DENIED}
     [java] 840 COMMENT 0   */
     [java] 220 METHOD 1 osid.shared.StringIterator getLogNamesForWriting()
     [java] 840 COMMENT 0   /**
     [java] 840 COMMENT 0 Get an existing log for writing.
     [java] 840 COMMENT 0 @param logName logName Represents the unique logical name of the Log.
     [java] 840 COMMENT 0 @return WritableLog
     [java] 840 COMMENT 0 @throws osid.logging.LoggingException An exception with one of the following messages defined in osid.logging.LoggingException:  {@link osid.logging.LoggingException#UNIMPLEMENTED UNIMPLEMENTED}, {@link osid.logging.LoggingException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.logging.LoggingException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.logging.LoggingException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.logging.LoggingException#UNKNOWN_NAME UNKNOWN_NAME}
     [java] 840 COMMENT 0   */
     [java] 220 METHOD 1 WritableLog getLogForWriting
     [java] 221 METHOD_ARG 1 String logName
     [java] 840 COMMENT 0   /**
     [java] 840 COMMENT 0 Return the names of readable Logs.
     [java] 840 COMMENT 0 @return osid.shared.StringIterator  Iterators return a group of items, one item at a time.  The Iterator's hasNext method returns <code>true</code> if there are additional objects available; <code>false</code> otherwise.  The Iterator's next method returns the next object.
     [java] 840 COMMENT 0 @throws osid.logging.LoggingException An exception with one of the following messages defined in osid.logging.LoggingException:  {@link osid.logging.LoggingException#UNIMPLEMENTED UNIMPLEMENTED}, {@link osid.logging.LoggingException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.logging.LoggingException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.logging.LoggingException#PERMISSION_DENIED PERMISSION_DENIED}
     [java] 840 COMMENT 0   */
     [java] 220 METHOD 1 osid.shared.StringIterator getLogNamesForReading()
     [java] 840 COMMENT 0   /**
     [java] 840 COMMENT 0 Get an existing log for reading.
     [java] 840 COMMENT 0 @param logName logName Represents the unique logical name of the Log.
     [java] 840 COMMENT 0 @return ReadableLog
     [java] 840 COMMENT 0 @throws osid.logging.LoggingException An exception with one of the following messages defined in osid.logging.LoggingException:  {@link osid.logging.LoggingException#UNIMPLEMENTED UNIMPLEMENTED}, {@link osid.logging.LoggingException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.logging.LoggingException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.logging.LoggingException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.logging.LoggingException#UNKNOWN_NAME UNKNOWN_NAME}
     [java] 840 COMMENT 0   */
     [java] 220 METHOD 1 ReadableLog getLogForReading
     [java] 221 METHOD_ARG 1 String logName
     [java] 840 COMMENT 0   /**
     [java] 840 COMMENT 0 Create a Writable Log.
     [java] 840 COMMENT 0 @param logName logName Represents the unique logical name of the Log.
     [java] 840 COMMENT 0 @return WritableLog
     [java] 840 COMMENT 0 @throws osid.logging.LoggingException An exception with one of the following messages defined in osid.logging.LoggingException:  {@link osid.logging.LoggingException#UNIMPLEMENTED UNIMPLEMENTED}, {@link osid.logging.LoggingException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.logging.LoggingException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.logging.LoggingException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.logging.LoggingException#DUPLICATE_NAME DUPLICATE_NAME}
     [java] 840 COMMENT 0   */
     [java] 220 METHOD 1 WritableLog createLog(String logName)
     [java] 840 COMMENT 0   /**
     [java] 840 COMMENT 0 Delete the log with the specified name.
     [java] 840 COMMENT 0 @param logName logName Represents the unique logical name of the Log.
     [java] 840 COMMENT 0 @throws osid.logging.LoggingException An exception with one of the following messages defined in osid.logging.LoggingException:  {@link osid.logging.LoggingException#UNIMPLEMENTED UNIMPLEMENTED}, {@link osid.logging.LoggingException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.logging.LoggingException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.logging.LoggingException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.logging.LoggingException#UNKNOWN_NAME UNKNOWN_NAME}
     [java] 840 COMMENT 0   */
     [java] 220 METHOD 1 void deleteLog(String logName)
     [java] 823 END 1 null
     [java] 822 BEGIN 0 null
     [java] 840 COMMENT 0   /**
     [java] 840 COMMENT 0 ReadableLog allows reading of its entries.  <p>SID Version: 1.0 rc6 <p>Licensed under the {@link osid.SidLicense MIT O.K.I&#46; SID Definition License}.
     [java] 840 COMMENT 0    */
     [java] 111 API_INTERFACE 1 ReadableLog
     [java] 840 COMMENT 0   /**
     [java] 840 COMMENT 0 Get the name for this ReadableLog.
     [java] 840 COMMENT 0 @return String the name
     [java] 840 COMMENT 0 @throws osid.logging.LoggingException An exception with one of the following messages defined in osid.logging.LoggingException:   {@link osid.logging.LoggingException#UNIMPLEMENTED UNIMPLEMENTED}, {@link osid.logging.LoggingException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.logging.LoggingException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.logging.LoggingException#PERMISSION_DENIED PERMISSION_DENIED}
     [java] 840 COMMENT 0   */
     [java] 220 METHOD 1 String getDisplayName()
     [java] 840 COMMENT 0   /**
     [java] 840 COMMENT 0 Return the ReadableLog Entries in a last-in, first-out (LIFO) order.
     [java] 840 COMMENT 0 @param formatType formatType filters log entries so that only entries with this formatType appear in the EntryIterator; may be null.
     [java] 840 COMMENT 0 @param priorityType filters log entries so that only entries with this priorityType appear in the EntryIterator; may be null.
     [java] 840 COMMENT 0 @return EntryIterator  Iterators return a group of items, one item at a time.  The Iterator's hasNext method returns <code>true</code> if there are additional objects available; <code>false</code> otherwise.  The Iterator's next method returns the next object.
     [java] 840 COMMENT 0 @throws osid.logging.LoggingException An exception with one of the following messages defined in osid.logging.LoggingException:   {@link osid.logging.LoggingException#UNIMPLEMENTED UNIMPLEMENTED}, {@link osid.logging.LoggingException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.logging.LoggingException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.logging.LoggingException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.logging.LoggingException#NULL_ARGUMENT NULL_ARGUMENT}, {@link osid.logging.LoggingException#UNKNOWN_TYPE UNKNOWN_TYPE}
     [java] 840 COMMENT 0   */
     [java] 220 METHOD 1 EntryIterator getEntries
     [java] 221 METHOD_ARG 1 osid.shared.Type formatType
     [java] 221 METHOD_ARG 1 osid.shared.Type priorityType
     [java] 823 END 1 null
     [java] 822 BEGIN 0 null
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 EntryIterator provides access to these objects sequentially, one at a time.  The purpose of all Iterators is to to offer a way for OSID methods to return multiple values of a common type and not use an array.  Returning an array may not be appropriate if the number of values returned is large or is fetched remotely.  Iterators do not allow access to values by index, rather you must access values in sequence. Similarly, there is no way to go backwards through the sequence unless you place the values in a data structure, such as an array, that allows for access by index. <p>SID Version: 1.0 rc6 <p>Licensed under the {@link osid.SidLicense MIT O.K.I&#46; SID Definition License}.
     [java] 840 COMMENT 0 */
     [java] 111 API_INTERFACE 1 EntryIterator
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Return <code>true</code> if there are additional  entries Description_IteratorHasNext2]
     [java] 840 COMMENT 0 @return boolean
     [java] 840 COMMENT 0 @throws osid.logging.LoggingException An exception with one of the following messages defined in osid.logging.LoggingException:   {@link osid.logging.LoggingException#UNIMPLEMENTED UNIMPLEMENTED}, {@link osid.logging.LoggingException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.logging.LoggingException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.logging.LoggingException#PERMISSION_DENIED PERMISSION_DENIED}
     [java] 840 COMMENT 0  */
     [java] 220 METHOD 1 boolean hasNext()
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Return the next Entry.
     [java] 840 COMMENT 0 @return Entry.
     [java] 840 COMMENT 0 @throws osid.logging.LoggingException An exception with one of the following messages defined in osid.logging.LoggingException:   {@link osid.logging.LoggingException#UNIMPLEMENTED UNIMPLEMENTED}, {@link osid.logging.LoggingException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.logging.LoggingException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.logging.LoggingException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.logging.LoggingException#NO_MORE_ITERATOR_ELEMENTS NO_MORE_ITERATOR_ELEMENTS}
     [java] 840 COMMENT 0  */
     [java] 220 METHOD 1 Entry next()
     [java] 823 END 1 null
     [java] 822 BEGIN 0 null
     [java] 840 COMMENT 0   /**
     [java] 840 COMMENT 0 Contains the logged item, its format type, its priority type, and the time the item was logged.   <p>SID Version: 1.0 rc6 <p>Licensed under the {@link osid.SidLicense MIT O.K.I&#46; SID Definition License}.
     [java] 840 COMMENT 0    */
     [java] 111 API_INTERFACE 1 Entry
     [java] 840 COMMENT 0   /**
     [java] 840 COMMENT 0 Return the logged item.
     [java] 840 COMMENT 0 @return java.io.Serializable item
     [java] 840 COMMENT 0 @throws osid.logging.LoggingException An exception with one of the following messages defined in osid.logging.LoggingException:   {@link osid.logging.LoggingException#UNIMPLEMENTED UNIMPLEMENTED}, {@link osid.logging.LoggingException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.logging.LoggingException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.logging.LoggingException#PERMISSION_DENIED PERMISSION_DENIED}
     [java] 840 COMMENT 0   */
     [java] 220 METHOD 1 java.io.Serializable getItem()
     [java] 840 COMMENT 0   /**
     [java] 840 COMMENT 0 Return the format type of logged item.
     [java] 840 COMMENT 0 @return osid.shared.Type
     [java] 840 COMMENT 0 @throws osid.logging.LoggingException An exception with one of the following messages defined in osid.logging.LoggingException:   {@link osid.logging.LoggingException#UNIMPLEMENTED UNIMPLEMENTED}, {@link osid.logging.LoggingException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.logging.LoggingException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.logging.LoggingException#PERMISSION_DENIED PERMISSION_DENIED}
     [java] 840 COMMENT 0   */
     [java] 220 METHOD 1 osid.shared.Type getFormatType()
     [java] 840 COMMENT 0   /**
     [java] 840 COMMENT 0 Return the format type of logged item.
     [java] 840 COMMENT 0 @return osid.shared.Type
     [java] 840 COMMENT 0 @throws osid.logging.LoggingException An exception with one of the following messages defined in osid.logging.LoggingException:   {@link osid.logging.LoggingException#UNIMPLEMENTED UNIMPLEMENTED}, {@link osid.logging.LoggingException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.logging.LoggingException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.logging.LoggingException#PERMISSION_DENIED PERMISSION_DENIED}
     [java] 840 COMMENT 0   */
     [java] 220 METHOD 1 osid.shared.Type getPriorityType()
     [java] 840 COMMENT 0   /**
     [java] 840 COMMENT 0 Return the time that the item was logged.
     [java] 840 COMMENT 0 @return java.util.Calendar
     [java] 840 COMMENT 0 @throws osid.logging.LoggingException An exception with one of the following messages defined in osid.logging.LoggingException:   {@link osid.logging.LoggingException#UNIMPLEMENTED UNIMPLEMENTED}, {@link osid.logging.LoggingException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.logging.LoggingException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.logging.LoggingException#PERMISSION_DENIED PERMISSION_DENIED}
     [java] 840 COMMENT 0   */
     [java] 220 METHOD 1 java.util.Calendar getTimestamp()
     [java] 823 END 1 null
     [java] 822 BEGIN 0 null
     [java] 840 COMMENT 0   /**
     [java] 840 COMMENT 0 Interface WritableLog allows writing of entry items, format types, priority types to a log.  Two methods are used to write the entryItems: <p> <code>appendLog(java.io.Serializable entryItem)</code> which writes the entry to the Log, <p> <code>appendLog(java.io.Serializable entryItem, osid.shared.Type formatType, osid.shared.Type priorityType)</code> which writes the entryItem to the Log as well as formatType and priorityType. <p> The implementation sets the timestamp for the for when the entryItem was appended to the log. The format type and the priority type can be set as defaults for subsequent appends.  <p>SID Version: 1.0 rc6 <p>Licensed under the {@link osid.SidLicense MIT O.K.I&#46; SID Definition License}.
     [java] 840 COMMENT 0    */
     [java] 111 API_INTERFACE 1 WritableLog
     [java] 840 COMMENT 0   /**
     [java] 840 COMMENT 0 Get the name for this WritableLog.
     [java] 840 COMMENT 0 @return String the name
     [java] 840 COMMENT 0 @throws osid.logging.LoggingException An exception with one of the following messages defined in osid.logging.LoggingException:   {@link osid.logging.LoggingException#UNIMPLEMENTED UNIMPLEMENTED}, {@link osid.logging.LoggingException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.logging.LoggingException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.logging.LoggingException#PERMISSION_DENIED PERMISSION_DENIED}
     [java] 840 COMMENT 0   */
     [java] 220 METHOD 1 String getDisplayName()
     [java] 840 COMMENT 0   /**
     [java] 840 COMMENT 0 Write the entryItem to the Log. The entryItem is written to the Log using the format type and priority type explicitly set by the application or the implementation default.
     [java] 840 COMMENT 0 @param entryItem
     [java] 840 COMMENT 0 @throws osid.logging.LoggingException An exception with one of the following messages defined in osid.logging.LoggingException:   {@link osid.logging.LoggingException#UNIMPLEMENTED UNIMPLEMENTED}, {@link osid.logging.LoggingException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.logging.LoggingException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.logging.LoggingException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.logging.LoggingException#PRIORITY_TYPE_NOT_SET PRIORITY_TYPE_NOT_SET}, {@link osid.logging.LoggingException#FORMAT_TYPE_NOT_SET FORMAT_TYPE_NOT_SET}, {@link osid.logging.LoggingException#NULL_ARGUMENT NULL_ARGUMENT}
     [java] 840 COMMENT 0   */
     [java] 220 METHOD 1 void appendLog(java.io.Serializable entryItem)
     [java] 840 COMMENT 0   /**
     [java] 840 COMMENT 0 Write the entry, the priorityType and formatType to the Log.
     [java] 840 COMMENT 0 @param entryItem
     [java] 840 COMMENT 0 @param formatType
     [java] 840 COMMENT 0 @param priorityType
     [java] 840 COMMENT 0 @throws osid.logging.LoggingException An exception with one of the following messages defined in osid.logging.LoggingException:   {@link osid.logging.LoggingException#UNIMPLEMENTED UNIMPLEMENTED}, {@link osid.logging.LoggingException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.logging.LoggingException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.logging.LoggingException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.logging.LoggingException#UNKNOWN_TYPE UNKNOWN_TYPE}, {@link osid.logging.LoggingException#NULL_ARGUMENT NULL_ARGUMENT}
     [java] 840 COMMENT 0   */
     [java] 220 METHOD 1 void appendLogWithTypes(java.io.Serializable entryItem, osid.shared.Type formatType, osid.shared.Type priorityType)
     [java] 840 COMMENT 0   /**
     [java] 840 COMMENT 0 Set the priorityType for all subsequent writes during the lifetime of this instance. PriorityType has meaning to the caller of this method.
     [java] 840 COMMENT 0 @param priorityType
     [java] 840 COMMENT 0 @throws osid.logging.LoggingException An exception with one of the following messages defined in osid.logging.LoggingException:   {@link osid.logging.LoggingException#UNIMPLEMENTED UNIMPLEMENTED}, {@link osid.logging.LoggingException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.logging.LoggingException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.logging.LoggingException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.logging.LoggingException#UNKNOWN_TYPE UNKNOWN_TYPE}, {@link osid.logging.LoggingException#NULL_ARGUMENT NULL_ARGUMENT}
     [java] 840 COMMENT 0    */
     [java] 220 METHOD 1 void setPriorityType(osid.shared.Type priorityType)
     [java] 840 COMMENT 0   /**
     [java] 840 COMMENT 0 Set the priorityType for all subsequent writes during the lifetime of this instance. PriorityType has meaning to the caller of this method.
     [java] 840 COMMENT 0 @param formatType
     [java] 840 COMMENT 0 @throws osid.logging.LoggingException An exception with one of the following messages defined in osid.logging.LoggingException:   {@link osid.logging.LoggingException#UNIMPLEMENTED UNIMPLEMENTED}, {@link osid.logging.LoggingException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.logging.LoggingException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.logging.LoggingException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.logging.LoggingException#UNKNOWN_TYPE UNKNOWN_TYPE}, {@link osid.logging.LoggingException#NULL_ARGUMENT NULL_ARGUMENT}
     [java] 840 COMMENT 0    */
     [java] 220 METHOD 1 void setFormatType(osid.shared.Type formatType)
     [java] 823 END 1 null
     [java] 822 BEGIN 0 null
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 All methods of all interfaces of the Open Service Interface Definition (OSID) throw a subclass of osid.OsidException. This requires the caller of an osid package method handle the OsidException. Since the application using an OsidManager can not determine where the implementation will ultimately execute, it must assume a worst case scenario and protect itself. <p>SID Version: 1.0 rc6 <p>Licensed under the {@link osid.SidLicense MIT O.K.I&#46; SID Definition License}.
     [java] 840 COMMENT 0 */
     [java] 100 CLASS 1 LoggingException
     [java] 120 EXTENDS 1 osid.OsidException
     [java] 123 THROWS_NOTHING 1 null
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Unknown or unsupported Type
     [java] 840 COMMENT 0 */
     [java] 150 DECLARE 1 public static final String UNKNOWN_TYPE = "Unknown Type "
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Unknown name
     [java] 840 COMMENT 0 */
     [java] 150 DECLARE 1 public static final String UNKNOWN_NAME = "Unknown log name "
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Duplicate name
     [java] 840 COMMENT 0 */
     [java] 150 DECLARE 1 public static final String DUPLICATE_NAME = "Duplicate log name "
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Operation failed
     [java] 840 COMMENT 0 */
     [java] 150 DECLARE 1 public static final String OPERATION_FAILED = "Operation failed "
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Iterator has no more elements
     [java] 840 COMMENT 0 */
     [java] 150 DECLARE 1 public static final String NO_MORE_ITERATOR_ELEMENTS = "Iterator has no more elements "
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Null argument
     [java] 840 COMMENT 0 */
     [java] 150 DECLARE 1 public static final String NULL_ARGUMENT = "Null argument "
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Permission denied
     [java] 840 COMMENT 0 */
     [java] 150 DECLARE 1 public static final String PERMISSION_DENIED = "Permission denied "
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Configuration error
     [java] 840 COMMENT 0 */
     [java] 150 DECLARE 1 public static final String CONFIGURATION_ERROR = "Configuration error "
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Unimplemented method
     [java] 840 COMMENT 0 */
     [java] 150 DECLARE 1 public static final String UNIMPLEMENTED = "Unimplemented method "
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Default priority Type not set
     [java] 840 COMMENT 0 */
     [java] 150 DECLARE 1 public static final String PRIORITY_TYPE_NOT_SET = "PriorityType not set "
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Default format Type not set
     [java] 840 COMMENT 0 */
     [java] 150 DECLARE 1 public static final String FORMAT_TYPE_NOT_SET = "FormatType not set "
     [java] 200 CONSTRUCTOR 1 String message
     [java] 201 CONSTRUCTOR_LINE 1 super( message );
     [java] 823 END 1 null
