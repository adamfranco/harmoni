     [java] 830 COPYRIGHT 2 osid.SidLicense
     [java] 872 ALWAYS_THROWS 0 osid.dr.DigitalRepositoryException
     [java] 851 API_PACKAGE 0 osid.dr
     [java] 852 IMPL_PACKAGE 0 osid.dr.skel
     [java] 836 MAKE_IMPL 0 null
     [java] 822 BEGIN 0 null
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 The DigitalRepositoryManager supports creating and deleting Digital Repositories and Assets as well as getting the various Types used.  <p>Licensed under the {@link osid.SidLicense MIT O.K.I&#46; SID Definition License}.
     [java] 840 COMMENT 0 <p>SID Version: 1.0 rc6<p>Licensed under the {@link osid.SidLicense MIT O.K.I&#46; SID Definition License}.
     [java] 840 COMMENT 0 */
     [java] 111 API_INTERFACE 1 DigitalRepositoryManager
     [java] 120 EXTENDS 1 osid.OsidManager
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Create a new DigitalRepository of the specified Type.  The implementation of this method sets the Id for the new object.
     [java] 840 COMMENT 0 @param displayName
     [java] 840 COMMENT 0 @param description
     [java] 840 COMMENT 0  digitalRepositoryType
     [java] 840 COMMENT 0 @return DigitalRepository
     [java] 840 COMMENT 0 @throws osid.dr.DigitalRepositoryException An exception with one of the following messages defined in osid.dr.DigitalRepositoryException may be thrown: {@link osid.dr.DigitalRepositoryException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.dr.DigitalRepositoryException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.dr.DigitalRepositoryException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.dr.DigitalRepositoryException#UNIMPLEMENTED UNIMPLEMENTED}, {@link osid.dr.DigitalRepositoryException#NULL_ARGUMENT NULL_ARGUMENT}, {@link osid.dr.DigitalRepositoryException#UNKNOWN_TYPE UNKNOWN_TYPE}
     [java] 840 COMMENT 0 */
     [java] 220 METHOD 1 DigitalRepository createDigitalRepository(String displayName, String description, osid.shared.Type digitalRepositoryType)
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Delete a DigitalRepository.
     [java] 840 COMMENT 0 null
     [java] 840 COMMENT 0 @throws osid.dr.DigitalRepositoryException An exception with one of the following messages defined in osid.dr.DigitalRepositoryException may be thrown: {@link osid.dr.DigitalRepositoryException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.dr.DigitalRepositoryException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.dr.DigitalRepositoryException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.dr.DigitalRepositoryException#UNIMPLEMENTED UNIMPLEMENTED}, {@link osid.dr.DigitalRepositoryException#NULL_ARGUMENT NULL_ARGUMENT}, {@link osid.dr.DigitalRepositoryException#UNKNOWN_ID UNKNOWN_ID}
     [java] 840 COMMENT 0 */
     [java] 220 METHOD 1 void deleteDigitalRepository(osid.shared.Id digitalRepositoryId)
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Get all the DigitalRepositories.  Iterators return a group of items, one item at a time.  The Iterator's hasNext method returns <code>true</code> if there are additional objects available; <code>false</code> otherwise.  The Iterator's next method returns the next object.
     [java] 840 COMMENT 0 @return DigitalRepositoryIterator  The order of the objects returned by the Iterator is not guaranteed.
     [java] 840 COMMENT 0 @throws osid.dr.DigitalRepositoryException An exception with one of the following messages defined in osid.dr.DigitalRepositoryException may be thrown: {@link osid.dr.DigitalRepositoryException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.dr.DigitalRepositoryException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.dr.DigitalRepositoryException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.dr.DigitalRepositoryException#UNIMPLEMENTED UNIMPLEMENTED}, {@link osid.dr.DigitalRepositoryException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.dr.DigitalRepositoryException#UNIMPLEMENTED UNIMPLEMENTED}
     [java] 840 COMMENT 0 */
     [java] 220 METHOD 1 DigitalRepositoryIterator getDigitalRepositories()
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Get all the DigitalRepositories of the specified Type.  Iterators return a group of items, one item at a time.  The Iterator's hasNext method returns <code>true</code> if there are additional objects available; <code>false</code> otherwise.  The Iterator's next method returns the next object.
     [java] 840 COMMENT 0  digitalRepositoryType
     [java] 840 COMMENT 0 @return DigitalRepositoryIterator  The order of the objects returned by the Iterator is not guaranteed.
     [java] 840 COMMENT 0 @throws osid.dr.DigitalRepositoryException An exception with one of the following messages defined in osid.dr.DigitalRepositoryException may be thrown: {@link osid.dr.DigitalRepositoryException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.dr.DigitalRepositoryException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.dr.DigitalRepositoryException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.dr.DigitalRepositoryException#UNIMPLEMENTED UNIMPLEMENTED}, {@link osid.dr.DigitalRepositoryException#NULL_ARGUMENT NULL_ARGUMENT}, {@link osid.dr.DigitalRepositoryException#UNKNOWN_TYPE UNKNOWN_TYPE}
     [java] 840 COMMENT 0 */
     [java] 220 METHOD 1 DigitalRepositoryIterator getDigitalRepositoriesByType(osid.shared.Type digitalRepositoryType)
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Get a specific DigitalRepository by Unique Id.
     [java] 840 COMMENT 0  digitalRepositoryId
     [java] 840 COMMENT 0 @return DigitalRepository
     [java] 840 COMMENT 0 @throws osid.dr.DigitalRepositoryException An exception with one of the following messages defined in osid.dr.DigitalRepositoryException may be thrown: {@link osid.dr.DigitalRepositoryException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.dr.DigitalRepositoryException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.dr.DigitalRepositoryException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.dr.DigitalRepositoryException#UNIMPLEMENTED UNIMPLEMENTED}, {@link osid.dr.DigitalRepositoryException#NULL_ARGUMENT NULL_ARGUMENT}, {@link osid.dr.DigitalRepositoryException#UNKNOWN_ID UNKNOWN_ID}
     [java] 840 COMMENT 0 */
     [java] 220 METHOD 1 DigitalRepository getDigitalRepository(osid.shared.Id digitalRepositoryId)
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Get the Asset with the specified Unique Id.
     [java] 840 COMMENT 0  assetId
     [java] 840 COMMENT 0 @return Asset
     [java] 840 COMMENT 0 @throws osid.dr.DigitalRepositoryException An exception with one of the following messages defined in osid.dr.DigitalRepositoryException may be thrown: {@link osid.dr.DigitalRepositoryException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.dr.DigitalRepositoryException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.dr.DigitalRepositoryException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.dr.DigitalRepositoryException#UNIMPLEMENTED UNIMPLEMENTED}, {@link osid.dr.DigitalRepositoryException#NULL_ARGUMENT NULL_ARGUMENT}, {@link osid.dr.DigitalRepositoryException#UNKNOWN_ID UNKNOWN_ID}
     [java] 840 COMMENT 0 */
     [java] 220 METHOD 1 public Asset getAsset(osid.shared.Id assetId)
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Get the Asset with the specified Unique Id and appropriate for the date specified.  The date permits
     [java] 840 COMMENT 0 @param assetId
     [java] 840 COMMENT 0 @param date
     [java] 840 COMMENT 0 @return Asset
     [java] 840 COMMENT 0 @throws osid.dr.DigitalRepositoryException An exception with one of the following messages defined in osid.dr.DigitalRepositoryException may be thrown: {@link osid.dr.DigitalRepositoryException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.dr.DigitalRepositoryException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.dr.DigitalRepositoryException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.dr.DigitalRepositoryException#UNIMPLEMENTED UNIMPLEMENTED}, {@link osid.dr.DigitalRepositoryException#NULL_ARGUMENT NULL_ARGUMENT}, {@link osid.dr.DigitalRepositoryException#NO_OBJECT_WITH_THIS_DATE NO_OBJECT_WITH_THIS_DATE}
     [java] 840 COMMENT 0 */
     [java] 220 METHOD 1 public Asset getAssetByDate(osid.shared.Id assetId, java.util.Calendar date)
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Get all the dates for the Asset with the specified Unique Id.  These dates could be for a form of versioning.
     [java] 840 COMMENT 0 @return osid.shared.CalendarIterator
     [java] 840 COMMENT 0 @throws osid.dr.DigitalRepositoryException An exception with one of the following messages defined in osid.dr.DigitalRepositoryException may be thrown: {@link osid.dr.DigitalRepositoryException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.dr.DigitalRepositoryException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.dr.DigitalRepositoryException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.dr.DigitalRepositoryException#UNIMPLEMENTED UNIMPLEMENTED}, {@link osid.dr.DigitalRepositoryException#NULL_ARGUMENT NULL_ARGUMENT}
     [java] 840 COMMENT 0 */
     [java] 220 METHOD 1 public osid.shared.CalendarIterator getAssetDates(osid.shared.Id assetId)
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Perform a search of the specified Type and get all the Assets that satisfy the SearchCriteria.  The search is performed for all specified DigitalRepositories.  Iterators return a group of items, one item at a time.  The Iterator's hasNext method returns <code>true</code> if there are additional objects available; <code>false</code> otherwise.  The Iterator's next method returns the next object.
     [java] 840 COMMENT 0 @param digitalRepositories
     [java] 840 COMMENT 0 @param searchCriteria
     [java] 840 COMMENT 0 @param searchType
     [java] 840 COMMENT 0 @return AssetIterator  The order of the objects returned by the Iterator is not guaranteed.
     [java] 840 COMMENT 0 @throws osid.dr.DigitalRepositoryException An exception with one of the following messages defined in osid.dr.DigitalRepositoryException may be thrown: {@link osid.dr.DigitalRepositoryException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.dr.DigitalRepositoryException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.dr.DigitalRepositoryException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.dr.DigitalRepositoryException#UNIMPLEMENTED UNIMPLEMENTED}, {@link osid.dr.DigitalRepositoryException#NULL_ARGUMENT NULL_ARGUMENT}, {@link osid.dr.DigitalRepositoryException#UNKNOWN_TYPE UNKNOWN_TYPE}, {@link osid.dr.DigitalRepositoryException#UNKNOWN_DR UNKNOWN_DR}
     [java] 840 COMMENT 0 */
     [java] 220 METHOD 1 public AssetIterator getAssets
     [java] 221 METHOD_ARG 1 DigitalRepository[] digitalRepositories
     [java] 221 METHOD_ARG 1 java.io.Serializable searchCriteria
     [java] 221 METHOD_ARG 1 osid.shared.Type searchType
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Create in a DigitalRepository a copy of an Asset.  The Id, AssetType, and DigitalRepository for the new Asset is set by the implementation.  All InfoRecords are similarly copied.
     [java] 840 COMMENT 0 @param digitalRepository
     [java] 840 COMMENT 0 @param assetId
     [java] 840 COMMENT 0 @return osid.shared.Id
     [java] 840 COMMENT 0 @throws osid.dr.DigitalRepositoryException An exception with one of the following messages defined in osid.dr.DigitalRepositoryException may be thrown: {@link osid.dr.DigitalRepositoryException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.dr.DigitalRepositoryException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.dr.DigitalRepositoryException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.dr.DigitalRepositoryException#UNIMPLEMENTED UNIMPLEMENTED}, {@link osid.dr.DigitalRepositoryException#NULL_ARGUMENT NULL_ARGUMENT}, {@link osid.dr.DigitalRepositoryException#UNKNOWN_ID UNKNOWN_ID}
     [java] 840 COMMENT 0 */
     [java] 220 METHOD 1 osid.shared.Id copyAsset(DigitalRepository digitalRepository, osid.shared.Id assetId)
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Get all the DigitalRepositoryTypes in this DigitalRepositoryManager.  DigitalRepositoryTypes are used to categorize DigitalRepositories.  Iterators return a group of items, one item at a time.  The Iterator's hasNext method returns <code>true</code> if there are additional objects available; <code>false</code> otherwise.  The Iterator's next method returns the next object.
     [java] 840 COMMENT 0 @return osid.shared.TypeIterator  The order of the objects returned by the Iterator is not guaranteed.
     [java] 840 COMMENT 0 @throws osid.dr.DigitalRepositoryException An exception with one of the following messages defined in osid.dr.DigitalRepositoryException may be thrown: {@link osid.dr.DigitalRepositoryException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.dr.DigitalRepositoryException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.dr.DigitalRepositoryException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.dr.DigitalRepositoryException#UNIMPLEMENTED UNIMPLEMENTED}
     [java] 840 COMMENT 0 */
     [java] 220 METHOD 1 osid.shared.TypeIterator getDigitalRepositoryTypes()
     [java] 823 END 1 null
     [java] 822 BEGIN 0 null
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 DigitialRepository manages Assets of various Types and information about the Assets.  Assets are created, persisted, and validated by the Digital Repository.  When initially created, an Asset has an immutable Type and Unique Id and its validation status is false.  In this state, all methods can be called, but integrity checks are not enforced.  When the Asset and its InfoRecords are ready to be validated, the validateAsset method checks the Asset and sets the validation status.  When working with a valid Asset, all methods include integrity checks and an exception is thrown if the activity would result in an inappropriate state.  Optionally, the invalidateAsset method can be called to release the requirement for integrity checks, but the Asset will not become valid again, until validateAsset is called and the entire Asset is checked.    <p>Licensed under the {@link osid.SidLicense MIT O.K.I&#46; SID Definition License}.
     [java] 840 COMMENT 0 <p>SID Version: 1.0 rc6<p>Licensed under the {@link osid.SidLicense MIT O.K.I&#46; SID Definition License}.
     [java] 840 COMMENT 0 */
     [java] 111 API_INTERFACE 1 DigitalRepository
     [java] 120 EXTENDS 1 java.io.Serializable
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Get the name for this DigitalRepository.
     [java] 840 COMMENT 0 @return String the name
     [java] 840 COMMENT 0 @throws osid.dr.DigitalRepositoryException An exception with one of the following messages defined in osid.dr.DigitalRepositoryException may be thrown: {@link osid.dr.DigitalRepositoryException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.dr.DigitalRepositoryException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.dr.DigitalRepositoryException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.dr.DigitalRepositoryException#UNIMPLEMENTED UNIMPLEMENTED}
     [java] 840 COMMENT 0 */
     [java] 230 GET 1 String DisplayName
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Update the name for this DigitalRepository.
     [java] 840 COMMENT 0 @param displayName
     [java] 840 COMMENT 0 @throws osid.dr.DigitalRepositoryException An exception with one of the following messages defined in osid.dr.DigitalRepositoryException may be thrown: {@link osid.dr.DigitalRepositoryException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.dr.DigitalRepositoryException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.dr.DigitalRepositoryException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.dr.DigitalRepositoryException#UNIMPLEMENTED UNIMPLEMENTED}, {@link osid.dr.DigitalRepositoryException#NULL_ARGUMENT NULL_ARGUMENT}
     [java] 840 COMMENT 0 */
     [java] 220 METHOD 1 public void updateDisplayName(String displayName)
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Get the description for this DigitalRepository.
     [java] 840 COMMENT 0 @return String the name
     [java] 840 COMMENT 0 @throws osid.dr.DigitalRepositoryException An exception with one of the following messages defined in osid.dr.DigitalRepositoryException may be thrown: {@link osid.dr.DigitalRepositoryException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.dr.DigitalRepositoryException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.dr.DigitalRepositoryException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.dr.DigitalRepositoryException#UNIMPLEMENTED UNIMPLEMENTED}
     [java] 840 COMMENT 0 */
     [java] 220 METHOD 1 public String getDescription()
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Update the description for this DigitalRepository.
     [java] 840 COMMENT 0 @param description
     [java] 840 COMMENT 0 @throws osid.dr.DigitalRepositoryException An exception with one of the following messages defined in osid.dr.DigitalRepositoryException may be thrown: {@link osid.dr.DigitalRepositoryException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.dr.DigitalRepositoryException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.dr.DigitalRepositoryException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.dr.DigitalRepositoryException#UNIMPLEMENTED UNIMPLEMENTED}, {@link osid.dr.DigitalRepositoryException#NULL_ARGUMENT NULL_ARGUMENT}
     [java] 840 COMMENT 0 */
     [java] 220 METHOD 1 public void updateDescription(String description)
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Get the Unique Id for this DigitalRepository.
     [java] 840 COMMENT 0 @return osid.shared.Id Unique Id this is usually set by a create method's implementation
     [java] 840 COMMENT 0 @throws osid.dr.DigitalRepositoryException An exception with one of the following messages defined in osid.dr.DigitalRepositoryException may be thrown: {@link osid.dr.DigitalRepositoryException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.dr.DigitalRepositoryException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.dr.DigitalRepositoryException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.dr.DigitalRepositoryException#UNIMPLEMENTED UNIMPLEMENTED}
     [java] 840 COMMENT 0 */
     [java] 230 GET 1 osid.shared.Id Id
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Get the the DigitalRepositoryType of this DigitalRepository.
     [java] 840 COMMENT 0 @return osid.shared.Type
     [java] 840 COMMENT 0 @throws osid.dr.DigitalRepositoryException An exception with one of the following messages defined in osid.dr.DigitalRepositoryException may be thrown: {@link osid.dr.DigitalRepositoryException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.dr.DigitalRepositoryException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.dr.DigitalRepositoryException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.dr.DigitalRepositoryException#UNIMPLEMENTED UNIMPLEMENTED}
     [java] 840 COMMENT 0 */
     [java] 230 GET 1 osid.shared.Type Type
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Create a new Asset of this AssetType to this DigitalRepository.  The implementation of this method sets the Id for the new object.
     [java] 840 COMMENT 0 @return Asset
     [java] 840 COMMENT 0 @throws osid.dr.DigitalRepositoryException An exception with one of the following messages defined in osid.dr.DigitalRepositoryException may be thrown: {@link osid.dr.DigitalRepositoryException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.dr.DigitalRepositoryException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.dr.DigitalRepositoryException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.dr.DigitalRepositoryException#UNIMPLEMENTED UNIMPLEMENTED}, {@link osid.dr.DigitalRepositoryException#NULL_ARGUMENT NULL_ARGUMENT}, {@link osid.dr.DigitalRepositoryException#UNKNOWN_TYPE UNKNOWN_TYPE}
     [java] 840 COMMENT 0 */
     [java] 220 METHOD 1 Asset createAsset(String displayName, String description, osid.shared.Type assetType)
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Delete an Asset from this DigitalRepository.
     [java] 840 COMMENT 0 null
     [java] 840 COMMENT 0 @throws osid.dr.DigitalRepositoryException An exception with one of the following messages defined in osid.dr.DigitalRepositoryException may be thrown: {@link osid.dr.DigitalRepositoryException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.dr.DigitalRepositoryException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.dr.DigitalRepositoryException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.dr.DigitalRepositoryException#UNIMPLEMENTED UNIMPLEMENTED}, {@link osid.dr.DigitalRepositoryException#NULL_ARGUMENT NULL_ARGUMENT}, {@link osid.dr.DigitalRepositoryException#UNKNOWN_ID UNKNOWN_ID}
     [java] 840 COMMENT 0 */
     [java] 220 METHOD 1 void deleteAsset(osid.shared.Id assetId)
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Get all the Assets in this DigitalRepository.  Iterators return a group of items, one item at a time.  The Iterator's hasNext method returns <code>true</code> if there are additional objects available; <code>false</code> otherwise.  The Iterator's next method returns the next object.
     [java] 840 COMMENT 0 @return AssetIterator  The order of the objects returned by the Iterator is not guaranteed.
     [java] 840 COMMENT 0 @throws osid.dr.DigitalRepositoryException An exception with one of the following messages defined in osid.dr.DigitalRepositoryException may be thrown: {@link osid.dr.DigitalRepositoryException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.dr.DigitalRepositoryException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.dr.DigitalRepositoryException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.dr.DigitalRepositoryException#UNIMPLEMENTED UNIMPLEMENTED}
     [java] 840 COMMENT 0 */
     [java] 220 METHOD 1 AssetIterator getAssets()
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Get all the Assets of the specified AssetType in this Asset.  Iterators return a group of items, one item at a time.  The Iterator's hasNext method returns <code>true</code> if there are additional objects available; <code>false</code> otherwise.  The Iterator's next method returns the next object.
     [java] 840 COMMENT 0 @return AssetIterator  The order of the objects returned by the Iterator is not guaranteed.
     [java] 840 COMMENT 0 @throws osid.dr.DigitalRepositoryException An exception with one of the following messages defined in osid.dr.DigitalRepositoryException may be thrown: {@link osid.dr.DigitalRepositoryException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.dr.DigitalRepositoryException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.dr.DigitalRepositoryException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.dr.DigitalRepositoryException#UNIMPLEMENTED UNIMPLEMENTED}, {@link osid.dr.DigitalRepositoryException#NULL_ARGUMENT NULL_ARGUMENT}, {@link osid.dr.DigitalRepositoryException#UNKNOWN_TYPE UNKNOWN_TYPE}
     [java] 840 COMMENT 0 */
     [java] 220 METHOD 1 public AssetIterator getAssetsByType(osid.shared.Type assetType)
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Get all the AssetTypes in this DigitalRepository.  AssetTypes are used to categorize Assets.  Iterators return a group of items, one item at a time.  The Iterator's hasNext method returns <code>true</code> if there are additional objects available; <code>false</code> otherwise.  The Iterator's next method returns the next object.
     [java] 840 COMMENT 0 @return osid.shared.TypeIterator  The order of the objects returned by the Iterator is not guaranteed.
     [java] 840 COMMENT 0 @throws osid.dr.DigitalRepositoryException An exception with one of the following messages defined in osid.dr.DigitalRepositoryException may be thrown: {@link osid.dr.DigitalRepositoryException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.dr.DigitalRepositoryException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.dr.DigitalRepositoryException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.dr.DigitalRepositoryException#UNIMPLEMENTED UNIMPLEMENTED}
     [java] 840 COMMENT 0 */
     [java] 220 METHOD 1 osid.shared.TypeIterator getAssetTypes()
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Get all the InfoStructures in this DigitalRepository.  InfoStructures are used to categorize information about Assets.  Iterators return a group of items, one item at a time.  The Iterator's hasNext method returns <code>true</code> if there are additional objects available; <code>false</code> otherwise.  The Iterator's next method returns the next object.
     [java] 840 COMMENT 0 @return InfoStructureIterator  The order of the objects returned by the Iterator is not guaranteed.
     [java] 840 COMMENT 0 @throws osid.dr.DigitalRepositoryException An exception with one of the following messages defined in osid.dr.DigitalRepositoryException may be thrown: {@link osid.dr.DigitalRepositoryException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.dr.DigitalRepositoryException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.dr.DigitalRepositoryException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.dr.DigitalRepositoryException#UNIMPLEMENTED UNIMPLEMENTED}
     [java] 840 COMMENT 0 */
     [java] 220 METHOD 1 InfoStructureIterator getInfoStructures()
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Get the InfoStructures that this AssetType must support.  InfoStructures are used to categorize information about Assets.  Iterators return a group of items, one item at a time.  The Iterator's hasNext method returns <code>true</code> if there are additional objects available; <code>false</code> otherwise.  The Iterator's next method returns the next object.
     [java] 840 COMMENT 0 @return InfoStructureIterator  The order of the objects returned by the Iterator is not guaranteed.
     [java] 840 COMMENT 0 @throws osid.dr.DigitalRepositoryException An exception with one of the following messages defined in osid.dr.DigitalRepositoryException may be thrown: {@link osid.dr.DigitalRepositoryException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.dr.DigitalRepositoryException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.dr.DigitalRepositoryException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.dr.DigitalRepositoryException#UNIMPLEMENTED UNIMPLEMENTED}, {@link osid.dr.DigitalRepositoryException#NULL_ARGUMENT NULL_ARGUMENT}, {@link osid.dr.DigitalRepositoryException#UNKNOWN_TYPE UNKNOWN_TYPE}
     [java] 840 COMMENT 0 */
     [java] 220 METHOD 1 InfoStructureIterator getMandatoryInfoStructures(osid.shared.Type assetType)
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Get all the SearchTypes supported by this DigitalRepository.  Iterators return a group of items, one item at a time.  The Iterator's hasNext method returns <code>true</code> if there are additional objects available; <code>false</code> otherwise.  The Iterator's next method returns the next object.
     [java] 840 COMMENT 0 @return osid.shared.TypeIterator  The order of the objects returned by the Iterator is not guaranteed.
     [java] 840 COMMENT 0 @throws osid.dr.DigitalRepositoryException An exception with one of the following messages defined in osid.dr.DigitalRepositoryException may be thrown: {@link osid.dr.DigitalRepositoryException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.dr.DigitalRepositoryException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.dr.DigitalRepositoryException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.dr.DigitalRepositoryException#UNIMPLEMENTED UNIMPLEMENTED}
     [java] 840 COMMENT 0 */
     [java] 220 METHOD 1 osid.shared.TypeIterator getSearchTypes()
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Get all the StatusTypes supported by this DigitalRepository.  Iterators return a group of items, one item at a time.  The Iterator's hasNext method returns <code>true</code> if there are additional objects available; <code>false</code> otherwise.  The Iterator's next method returns the next object.
     [java] 840 COMMENT 0 @return osid.shared.TypeIterator  The order of the objects returned by the Iterator is not guaranteed.
     [java] 840 COMMENT 0 @throws osid.dr.DigitalRepositoryException An exception with one of the following messages defined in osid.dr.DigitalRepositoryException may be thrown: {@link osid.dr.DigitalRepositoryException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.dr.DigitalRepositoryException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.dr.DigitalRepositoryException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.dr.DigitalRepositoryException#UNIMPLEMENTED UNIMPLEMENTED}
     [java] 840 COMMENT 0 */
     [java] 220 METHOD 1 osid.shared.TypeIterator getStatusTypes()
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Get the the StatusType of this Asset.
     [java] 840 COMMENT 0 @return osid.shared.Type
     [java] 840 COMMENT 0 @throws osid.dr.DigitalRepositoryException An exception with one of the following messages defined in osid.dr.DigitalRepositoryException may be thrown: {@link osid.dr.DigitalRepositoryException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.dr.DigitalRepositoryException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.dr.DigitalRepositoryException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.dr.DigitalRepositoryException#UNIMPLEMENTED UNIMPLEMENTED}, {@link osid.dr.DigitalRepositoryException#NULL_ARGUMENT NULL_ARGUMENT}, {@link osid.dr.DigitalRepositoryException#UNKNOWN_ID UNKNOWN_ID}
     [java] 840 COMMENT 0 */
     [java] 220 METHOD 1 osid.shared.Type getStatus(osid.shared.Id assetId)
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Validate all the InfoRecords for an Asset and set its status Type accordingly.  If the Asset is valid, return true; otherwise return false.  The implementation may throw an Exception for any validation failures and use the Exception's message to identify specific causes.
     [java] 840 COMMENT 0 null
     [java] 840 COMMENT 0 @return boolean
     [java] 840 COMMENT 0 @throws osid.dr.DigitalRepositoryException An exception with one of the following messages defined in osid.dr.DigitalRepositoryException may be thrown: {@link osid.dr.DigitalRepositoryException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.dr.DigitalRepositoryException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.dr.DigitalRepositoryException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.dr.DigitalRepositoryException#UNIMPLEMENTED UNIMPLEMENTED}, {@link osid.dr.DigitalRepositoryException#NULL_ARGUMENT NULL_ARGUMENT}, {@link osid.dr.DigitalRepositoryException#UNKNOWN_ID UNKNOWN_ID}
     [java] 840 COMMENT 0 */
     [java] 220 METHOD 1 public boolean validateAsset(osid.shared.Id assetId)
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Set the Asset's status Type accordingly and relax validation checking when creating InfoRecords and InfoFields or updating InfoField's values.
     [java] 840 COMMENT 0 null
     [java] 840 COMMENT 0 @return boolean
     [java] 840 COMMENT 0 @throws osid.dr.DigitalRepositoryException An exception with one of the following messages defined in osid.dr.DigitalRepositoryException may be thrown: {@link osid.dr.DigitalRepositoryException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.dr.DigitalRepositoryException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.dr.DigitalRepositoryException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.dr.DigitalRepositoryException#UNIMPLEMENTED UNIMPLEMENTED}, {@link osid.dr.DigitalRepositoryException#NULL_ARGUMENT NULL_ARGUMENT}, {@link osid.dr.DigitalRepositoryException#UNKNOWN_ID UNKNOWN_ID}
     [java] 840 COMMENT 0 */
     [java] 220 METHOD 1 public void invalidateAsset(osid.shared.Id assetId)
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Get the Asset with the specified Unique Id.
     [java] 840 COMMENT 0  assetId
     [java] 840 COMMENT 0 @return Asset
     [java] 840 COMMENT 0 @throws osid.dr.DigitalRepositoryException An exception with one of the following messages defined in osid.dr.DigitalRepositoryException may be thrown: {@link osid.dr.DigitalRepositoryException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.dr.DigitalRepositoryException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.dr.DigitalRepositoryException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.dr.DigitalRepositoryException#UNIMPLEMENTED UNIMPLEMENTED}, {@link osid.dr.DigitalRepositoryException#NULL_ARGUMENT NULL_ARGUMENT}, {@link osid.dr.DigitalRepositoryException#UNKNOWN_ID UNKNOWN_ID}
     [java] 840 COMMENT 0 */
     [java] 220 METHOD 1 public Asset getAsset(osid.shared.Id assetId)
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Get the Asset with the specified Unique Id and appropriate for the date specified.  The date permits
     [java] 840 COMMENT 0 @param assetId
     [java] 840 COMMENT 0 @param date
     [java] 840 COMMENT 0 @return Asset
     [java] 840 COMMENT 0 @throws osid.dr.DigitalRepositoryException An exception with one of the following messages defined in osid.dr.DigitalRepositoryException may be thrown: {@link osid.dr.DigitalRepositoryException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.dr.DigitalRepositoryException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.dr.DigitalRepositoryException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.dr.DigitalRepositoryException#UNIMPLEMENTED UNIMPLEMENTED}, {@link osid.dr.DigitalRepositoryException#NULL_ARGUMENT NULL_ARGUMENT}, {@link osid.dr.DigitalRepositoryException#NO_OBJECT_WITH_THIS_DATE NO_OBJECT_WITH_THIS_DATE}
     [java] 840 COMMENT 0 */
     [java] 220 METHOD 1 public Asset getAssetByDate(osid.shared.Id assetId, java.util.Calendar date)
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Get all the dates for the Asset with the specified Unique Id.  These dates could be for a form of versioning.
     [java] 840 COMMENT 0 @return osid.shared.CalendarIterator
     [java] 840 COMMENT 0 @throws osid.dr.DigitalRepositoryException An exception with one of the following messages defined in osid.dr.DigitalRepositoryException may be thrown: {@link osid.dr.DigitalRepositoryException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.dr.DigitalRepositoryException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.dr.DigitalRepositoryException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.dr.DigitalRepositoryException#UNIMPLEMENTED UNIMPLEMENTED}, {@link osid.dr.DigitalRepositoryException#NULL_ARGUMENT NULL_ARGUMENT}
     [java] 840 COMMENT 0 */
     [java] 220 METHOD 1 public osid.shared.CalendarIterator getAssetDates(osid.shared.Id assetId)
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Perform a search of the specified Type and get all the Assets that satisfy the SearchCriteria.  Iterators return a group of items, one item at a time.  The Iterator's hasNext method returns <code>true</code> if there are additional objects available; <code>false</code> otherwise.  The Iterator's next method returns the next object.
     [java] 840 COMMENT 0 @param searchCriteria
     [java] 840 COMMENT 0 @param searchType
     [java] 840 COMMENT 0 @return AssetIterator  The order of the objects returned by the Iterator is not guaranteed.
     [java] 840 COMMENT 0 @throws osid.dr.DigitalRepositoryException An exception with one of the following messages defined in osid.dr.DigitalRepositoryException may be thrown: {@link osid.dr.DigitalRepositoryException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.dr.DigitalRepositoryException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.dr.DigitalRepositoryException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.dr.DigitalRepositoryException#UNIMPLEMENTED UNIMPLEMENTED}, {@link osid.dr.DigitalRepositoryException#NULL_ARGUMENT NULL_ARGUMENT}, {@link osid.dr.DigitalRepositoryException#UNKNOWN_TYPE UNKNOWN_TYPE}
     [java] 840 COMMENT 0 */
     [java] 220 METHOD 1 public AssetIterator getAssetsBySearch
     [java] 221 METHOD_ARG 1 java.io.Serializable searchCriteria
     [java] 221 METHOD_ARG 1 osid.shared.Type searchType
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Create in a copy of an Asset.  The Id, AssetType, and DigitalRepository for the new Asset is set by the implementation.  All InfoRecords are similarly copied.
     [java] 840 COMMENT 0 @param asset
     [java] 840 COMMENT 0 @return osid.shared.Id
     [java] 840 COMMENT 0 @throws osid.dr.DigitalRepositoryException An exception with one of the following messages defined in osid.dr.DigitalRepositoryException may be thrown: {@link osid.dr.DigitalRepositoryException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.dr.DigitalRepositoryException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.dr.DigitalRepositoryException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.dr.DigitalRepositoryException#UNIMPLEMENTED UNIMPLEMENTED}, {@link osid.dr.DigitalRepositoryException#NULL_ARGUMENT NULL_ARGUMENT}, {@link osid.dr.DigitalRepositoryException#UNKNOWN_ID UNKNOWN_ID}
     [java] 840 COMMENT 0 */
     [java] 220 METHOD 1 osid.shared.Id copyAsset(osid.dr.Asset asset)
     [java] 823 END 1 null
     [java] 822 BEGIN 0 null
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Asset manages the Asset itself.  Assets have content as well as InfoRecords appropriate to the AssetType and InfoStructures for the Asset.  Assets may also contain other Assets.
     [java] 840 COMMENT 0 <p>SID Version: 1.0 rc6<p>Licensed under the {@link osid.SidLicense MIT O.K.I&#46; SID Definition License}.
     [java] 840 COMMENT 0 */
     [java] 111 API_INTERFACE 1 Asset
     [java] 120 EXTENDS 1 java.io.Serializable
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Get the name for this Asset.
     [java] 840 COMMENT 0 @return String the name
     [java] 840 COMMENT 0 @throws osid.dr.DigitalRepositoryException An exception with one of the following messages defined in osid.dr.DigitalRepositoryException may be thrown: {@link osid.dr.DigitalRepositoryException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.dr.DigitalRepositoryException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.dr.DigitalRepositoryException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.dr.DigitalRepositoryException#UNIMPLEMENTED UNIMPLEMENTED}
     [java] 840 COMMENT 0 */
     [java] 230 GET 1 String DisplayName
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Update the name for this Asset.
     [java] 840 COMMENT 0 @param displayName
     [java] 840 COMMENT 0 @throws osid.dr.DigitalRepositoryException An exception with one of the following messages defined in osid.dr.DigitalRepositoryException may be thrown: {@link osid.dr.DigitalRepositoryException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.dr.DigitalRepositoryException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.dr.DigitalRepositoryException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.dr.DigitalRepositoryException#UNIMPLEMENTED UNIMPLEMENTED}, {@link osid.dr.DigitalRepositoryException#NULL_ARGUMENT NULL_ARGUMENT}
     [java] 840 COMMENT 0 */
     [java] 220 METHOD 1 public void updateDisplayName(String displayName)
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Get the description for this Asset.
     [java] 840 COMMENT 0 @return String the name
     [java] 840 COMMENT 0 @throws osid.dr.DigitalRepositoryException An exception with one of the following messages defined in osid.dr.DigitalRepositoryException may be thrown: {@link osid.dr.DigitalRepositoryException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.dr.DigitalRepositoryException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.dr.DigitalRepositoryException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.dr.DigitalRepositoryException#UNIMPLEMENTED UNIMPLEMENTED}
     [java] 840 COMMENT 0 */
     [java] 230 GET 1 String Description
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Update the description for this Asset.
     [java] 840 COMMENT 0 @param description
     [java] 840 COMMENT 0 @throws osid.dr.DigitalRepositoryException An exception with one of the following messages defined in osid.dr.DigitalRepositoryException may be thrown: {@link osid.dr.DigitalRepositoryException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.dr.DigitalRepositoryException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.dr.DigitalRepositoryException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.dr.DigitalRepositoryException#UNIMPLEMENTED UNIMPLEMENTED}, {@link osid.dr.DigitalRepositoryException#NULL_ARGUMENT NULL_ARGUMENT}
     [java] 840 COMMENT 0 */
     [java] 220 METHOD 1 void updateDescription(String description)
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Get the Unique Id for this Asset.
     [java] 840 COMMENT 0 @return osid.shared.Id Unique Id this is usually set by a create method's implementation
     [java] 840 COMMENT 0 @throws osid.dr.DigitalRepositoryException An exception with one of the following messages defined in osid.dr.DigitalRepositoryException may be thrown: {@link osid.dr.DigitalRepositoryException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.dr.DigitalRepositoryException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.dr.DigitalRepositoryException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.dr.DigitalRepositoryException#UNIMPLEMENTED UNIMPLEMENTED}
     [java] 840 COMMENT 0 */
     [java] 230 GET 1 osid.shared.Id Id
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Get the Id of the DigitalRepository in which this Asset resides.  This is set by the DigitalRepository's createAsset method.
     [java] 840 COMMENT 0 @return osid.shared.Id Unique Id this is usually set by a create method's implementation digitalRepositoryId
     [java] 840 COMMENT 0 @throws osid.dr.DigitalRepositoryException An exception with one of the following messages defined in osid.dr.DigitalRepositoryException may be thrown: {@link osid.dr.DigitalRepositoryException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.dr.DigitalRepositoryException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.dr.DigitalRepositoryException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.dr.DigitalRepositoryException#UNIMPLEMENTED UNIMPLEMENTED}
     [java] 840 COMMENT 0 */
     [java] 220 METHOD 1 public osid.shared.Id getDigitalRepository()
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Get an Asset's content.  This method can be a convenience if one is not interested in all the structure of the InfoRecords.
     [java] 840 COMMENT 0 @return java.io.Serializable
     [java] 840 COMMENT 0 @throws osid.dr.DigitalRepositoryException An exception with one of the following messages defined in osid.dr.DigitalRepositoryException may be thrown: {@link osid.dr.DigitalRepositoryException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.dr.DigitalRepositoryException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.dr.DigitalRepositoryException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.dr.DigitalRepositoryException#UNIMPLEMENTED UNIMPLEMENTED}
     [java] 840 COMMENT 0 */
     [java] 220 METHOD 1 public java.io.Serializable getContent()
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Update an Asset's content.
     [java] 840 COMMENT 0 null
     [java] 840 COMMENT 0 @throws osid.dr.DigitalRepositoryException An exception with one of the following messages defined in osid.dr.DigitalRepositoryException may be thrown: {@link osid.dr.DigitalRepositoryException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.dr.DigitalRepositoryException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.dr.DigitalRepositoryException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.dr.DigitalRepositoryException#UNIMPLEMENTED UNIMPLEMENTED}, {@link osid.dr.DigitalRepositoryException#NULL_ARGUMENT NULL_ARGUMENT}
     [java] 840 COMMENT 0 */
     [java] 220 METHOD 1 public void updateContent(java.io.Serializable content)
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Add an Asset to this Asset.
     [java] 840 COMMENT 0  assetId
     [java] 840 COMMENT 0 @throws osid.dr.DigitalRepositoryException An exception with one of the following messages defined in osid.dr.DigitalRepositoryException may be thrown: {@link osid.dr.DigitalRepositoryException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.dr.DigitalRepositoryException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.dr.DigitalRepositoryException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.dr.DigitalRepositoryException#UNIMPLEMENTED UNIMPLEMENTED}, {@link osid.dr.DigitalRepositoryException#NULL_ARGUMENT NULL_ARGUMENT}, {@link osid.dr.DigitalRepositoryException#UNKNOWN_ID UNKNOWN_ID}, {@link osid.dr.DigitalRepositoryException#ALREADY_ADDED ALREADY_ADDED}
     [java] 840 COMMENT 0 */
     [java] 220 METHOD 1 public void addAsset(osid.shared.Id assetId)
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Remove an Asset to this Asset.  This method does not delete the Asset from the DigitalRepository.
     [java] 840 COMMENT 0  assetId
     [java] 840 COMMENT 0 @throws osid.dr.DigitalRepositoryException An exception with one of the following messages defined in osid.dr.DigitalRepositoryException may be thrown: {@link osid.dr.DigitalRepositoryException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.dr.DigitalRepositoryException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.dr.DigitalRepositoryException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.dr.DigitalRepositoryException#UNIMPLEMENTED UNIMPLEMENTED}, {@link osid.dr.DigitalRepositoryException#NULL_ARGUMENT NULL_ARGUMENT}, {@link osid.dr.DigitalRepositoryException#UNKNOWN_ID UNKNOWN_ID}
     [java] 840 COMMENT 0 */
     [java] 220 METHOD 1 public void removeAsset(osid.shared.Id assetId, boolean includeChildren)
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Get all the Assets in this Asset.  Iterators return a group of items, one item at a time.  The Iterator's hasNext method returns <code>true</code> if there are additional objects available; <code>false</code> otherwise.  The Iterator's next method returns the next object.
     [java] 840 COMMENT 0 @return AssetIterator  The order of the objects returned by the Iterator is not guaranteed.
     [java] 840 COMMENT 0 @throws osid.dr.DigitalRepositoryException An exception with one of the following messages defined in osid.dr.DigitalRepositoryException may be thrown: {@link osid.dr.DigitalRepositoryException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.dr.DigitalRepositoryException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.dr.DigitalRepositoryException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.dr.DigitalRepositoryException#UNIMPLEMENTED UNIMPLEMENTED}
     [java] 840 COMMENT 0 */
     [java] 220 METHOD 1 AssetIterator getAssets()
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Get all the Assets of the specified AssetType in this DigitalRepository.  Iterators return a group of items, one item at a time.  The Iterator's hasNext method returns <code>true</code> if there are additional objects available; <code>false</code> otherwise.  The Iterator's next method returns the next object.
     [java] 840 COMMENT 0 @return AssetIterator  The order of the objects returned by the Iterator is not guaranteed.
     [java] 840 COMMENT 0 @throws osid.dr.DigitalRepositoryException An exception with one of the following messages defined in osid.dr.DigitalRepositoryException may be thrown: {@link osid.dr.DigitalRepositoryException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.dr.DigitalRepositoryException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.dr.DigitalRepositoryException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.dr.DigitalRepositoryException#UNIMPLEMENTED UNIMPLEMENTED}, {@link osid.dr.DigitalRepositoryException#NULL_ARGUMENT NULL_ARGUMENT}, {@link osid.dr.DigitalRepositoryException#UNKNOWN_TYPE UNKNOWN_TYPE}
     [java] 840 COMMENT 0 */
     [java] 220 METHOD 1 public AssetIterator getAssetsByType(osid.shared.Type assetType)
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Create a new Asset InfoRecord of the specified InfoStructure.   The implementation of this method sets the Id for the new object.
     [java] 840 COMMENT 0  infoStructureId
     [java] 840 COMMENT 0 @return InfoRecord
     [java] 840 COMMENT 0 @throws osid.dr.DigitalRepositoryException An exception with one of the following messages defined in osid.dr.DigitalRepositoryException may be thrown: {@link osid.dr.DigitalRepositoryException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.dr.DigitalRepositoryException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.dr.DigitalRepositoryException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.dr.DigitalRepositoryException#UNIMPLEMENTED UNIMPLEMENTED}, {@link osid.dr.DigitalRepositoryException#NULL_ARGUMENT NULL_ARGUMENT}, {@link osid.dr.DigitalRepositoryException#UNKNOWN_ID UNKNOWN_ID}
     [java] 840 COMMENT 0 */
     [java] 220 METHOD 1 public InfoRecord createInfoRecord(osid.shared.Id infoStructureId)
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Add the specified InfoStructure and all the related InfoRecords from the specified asset.  The current and future content of the specified InfoRecord is synchronized automatically.
     [java] 840 COMMENT 0  assetId
     [java] 840 COMMENT 0  infoStructureId
     [java] 840 COMMENT 0 @throws osid.dr.DigitalRepositoryException An exception with one of the following messages defined in osid.dr.DigitalRepositoryException may be thrown: {@link osid.dr.DigitalRepositoryException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.dr.DigitalRepositoryException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.dr.DigitalRepositoryException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.dr.DigitalRepositoryException#UNIMPLEMENTED UNIMPLEMENTED}, {@link osid.dr.DigitalRepositoryException#NULL_ARGUMENT NULL_ARGUMENT}, {@link osid.dr.DigitalRepositoryException#UNKNOWN_ID UNKNOWN_ID}, ALREADY_INHERITING_STRUCTURE
     [java] 840 COMMENT 0 */
     [java] 220 METHOD 1 public void inheritInfoStructure(osid.shared.Id assetId, osid.shared.Id infoStructureId)
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Add the specified InfoStructure and all the related InfoRecords from the specified asset.
     [java] 840 COMMENT 0  assetId
     [java] 840 COMMENT 0  infoStructureId
     [java] 840 COMMENT 0 @throws osid.dr.DigitalRepositoryException An exception with one of the following messages defined in osid.dr.DigitalRepositoryException may be thrown: {@link osid.dr.DigitalRepositoryException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.dr.DigitalRepositoryException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.dr.DigitalRepositoryException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.dr.DigitalRepositoryException#UNIMPLEMENTED UNIMPLEMENTED}, {@link osid.dr.DigitalRepositoryException#NULL_ARGUMENT NULL_ARGUMENT}, {@link osid.dr.DigitalRepositoryException#UNKNOWN_ID UNKNOWN_ID}, {@link osid.dr.DigitalRepositoryException#CANNOT_COPY_OR_INHERIT_SELF CANNOT_COPY_OR_INHERIT_SELF}
     [java] 840 COMMENT 0 */
     [java] 220 METHOD 1 public void copyInfoStructure(osid.shared.Id assetId, osid.shared.Id infoStructureId)
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Delete an InfoRecord.  If the specified InfoRecord has content that is inherited by other InfoRecords, those
     [java] 840 COMMENT 0  infoRecordId
     [java] 840 COMMENT 0 @throws osid.dr.DigitalRepositoryException An exception with one of the following messages defined in osid.dr.DigitalRepositoryException may be thrown: {@link osid.dr.DigitalRepositoryException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.dr.DigitalRepositoryException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.dr.DigitalRepositoryException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.dr.DigitalRepositoryException#UNIMPLEMENTED UNIMPLEMENTED}, {@link osid.dr.DigitalRepositoryException#NULL_ARGUMENT NULL_ARGUMENT}, {@link osid.dr.DigitalRepositoryException#UNKNOWN_ID UNKNOWN_ID}
     [java] 840 COMMENT 0 */
     [java] 220 METHOD 1 public void deleteInfoRecord(osid.shared.Id infoRecordId)
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Get all the InfoRecords for this Asset.  Iterators return a group of items, one item at a time.  The Iterator's hasNext method returns <code>true</code> if there are additional objects available; <code>false</code> otherwise.  The Iterator's next method returns the next object.
     [java] 840 COMMENT 0 @return InfoRecordIterator  The order of the objects returned by the Iterator is not guaranteed.
     [java] 840 COMMENT 0 @throws osid.dr.DigitalRepositoryException An exception with one of the following messages defined in osid.dr.DigitalRepositoryException may be thrown: {@link osid.dr.DigitalRepositoryException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.dr.DigitalRepositoryException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.dr.DigitalRepositoryException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.dr.DigitalRepositoryException#UNIMPLEMENTED UNIMPLEMENTED}
     [java] 840 COMMENT 0 */
     [java] 220 METHOD 1 public InfoRecordIterator getInfoRecords()
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Get all the InfoRecords of the specified InfoStructure for this Asset.  Iterators return a group of items, one item at a time.  The Iterator's hasNext method returns <code>true</code> if there are additional objects available; <code>false</code> otherwise.  The Iterator's next method returns the next object.
     [java] 840 COMMENT 0  infoStructureId
     [java] 840 COMMENT 0 @return InfoRecordIterator  The order of the objects returned by the Iterator is not guaranteed.
     [java] 840 COMMENT 0 @throws osid.dr.DigitalRepositoryException An exception with one of the following messages defined in osid.dr.DigitalRepositoryException may be thrown: {@link osid.dr.DigitalRepositoryException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.dr.DigitalRepositoryException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.dr.DigitalRepositoryException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.dr.DigitalRepositoryException#UNIMPLEMENTED UNIMPLEMENTED}, {@link osid.dr.DigitalRepositoryException#NULL_ARGUMENT NULL_ARGUMENT}, {@link osid.dr.DigitalRepositoryException#UNKNOWN_ID UNKNOWN_ID}
     [java] 840 COMMENT 0 */
     [java] 220 METHOD 1 public InfoRecordIterator getInfoRecordsByInfoStructure(osid.shared.Id infoStructureId)
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Description_getAssetTypes=Get the AssetType of this Asset.  AssetTypes are used to categorize Assets.
     [java] 840 COMMENT 0 @return osid.shared.Type
     [java] 840 COMMENT 0 @throws osid.dr.DigitalRepositoryException An exception with one of the following messages defined in osid.dr.DigitalRepositoryException may be thrown: {@link osid.dr.DigitalRepositoryException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.dr.DigitalRepositoryException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.dr.DigitalRepositoryException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.dr.DigitalRepositoryException#UNIMPLEMENTED UNIMPLEMENTED}
     [java] 840 COMMENT 0 */
     [java] 230 GET 1 osid.shared.Type AssetType
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Get all the InfoStructures for this Asset.  InfoStructures are used to categorize information about Assets.  Iterators return a group of items, one item at a time.  The Iterator's hasNext method returns <code>true</code> if there are additional objects available; <code>false</code> otherwise.  The Iterator's next method returns the next object.
     [java] 840 COMMENT 0 @return InfoStructureIterator  The order of the objects returned by the Iterator is not guaranteed.
     [java] 840 COMMENT 0 @throws osid.dr.DigitalRepositoryException An exception with one of the following messages defined in osid.dr.DigitalRepositoryException may be thrown: {@link osid.dr.DigitalRepositoryException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.dr.DigitalRepositoryException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.dr.DigitalRepositoryException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.dr.DigitalRepositoryException#UNIMPLEMENTED UNIMPLEMENTED}
     [java] 840 COMMENT 0 */
     [java] 220 METHOD 1 public InfoStructureIterator  getInfoStructures()
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Get the InfoStructure associated with this Asset's content.
     [java] 840 COMMENT 0 @return InfoStructure
     [java] 840 COMMENT 0 @throws osid.dr.DigitalRepositoryException An exception with one of the following messages defined in osid.dr.DigitalRepositoryException may be thrown: {@link osid.dr.DigitalRepositoryException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.dr.DigitalRepositoryException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.dr.DigitalRepositoryException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.dr.DigitalRepositoryException#UNIMPLEMENTED UNIMPLEMENTED}
     [java] 840 COMMENT 0 */
     [java] 220 METHOD 1 public InfoStructure  getContentInfoStructure()
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Get the InfoRecord for this Asset that matches this InfoRecord Unique Id.
     [java] 840 COMMENT 0 @param infoRecordId
     [java] 840 COMMENT 0 @throws osid.dr.DigitalRepositoryException An exception with one of the following messages defined in osid.dr.DigitalRepositoryException may be thrown: {@link osid.dr.DigitalRepositoryException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.dr.DigitalRepositoryException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.dr.DigitalRepositoryException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.dr.DigitalRepositoryException#UNIMPLEMENTED UNIMPLEMENTED}, {@link osid.dr.DigitalRepositoryException#NULL_ARGUMENT NULL_ARGUMENT}, {@link osid.dr.DigitalRepositoryException#UNKNOWN_ID UNKNOWN_ID}
     [java] 840 COMMENT 0 */
     [java] 220 METHOD 1 InfoRecord getInfoRecord(osid.shared.Id infoRecordId)
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Get the InfoField for an InfoRecord for this Asset that matches this InfoField Unique Id.
     [java] 840 COMMENT 0 @return infoFieldId
     [java] 840 COMMENT 0 @throws osid.dr.DigitalRepositoryException An exception with one of the following messages defined in osid.dr.DigitalRepositoryException may be thrown: {@link osid.dr.DigitalRepositoryException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.dr.DigitalRepositoryException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.dr.DigitalRepositoryException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.dr.DigitalRepositoryException#UNIMPLEMENTED UNIMPLEMENTED}, {@link osid.dr.DigitalRepositoryException#NULL_ARGUMENT NULL_ARGUMENT}, {@link osid.dr.DigitalRepositoryException#UNKNOWN_ID UNKNOWN_ID}
     [java] 840 COMMENT 0 */
     [java] 220 METHOD 1 InfoField getInfoField(osid.shared.Id infoFieldId)
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Get the Value of the InfoField of the InfoRecord for this Asset that matches this InfoField Unique Id.
     [java] 840 COMMENT 0 @return infoFieldId
     [java] 840 COMMENT 0 @throws osid.dr.DigitalRepositoryException An exception with one of the following messages defined in osid.dr.DigitalRepositoryException may be thrown: {@link osid.dr.DigitalRepositoryException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.dr.DigitalRepositoryException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.dr.DigitalRepositoryException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.dr.DigitalRepositoryException#UNIMPLEMENTED UNIMPLEMENTED}, {@link osid.dr.DigitalRepositoryException#NULL_ARGUMENT NULL_ARGUMENT}, {@link osid.dr.DigitalRepositoryException#UNKNOWN_ID UNKNOWN_ID}
     [java] 840 COMMENT 0 */
     [java] 220 METHOD 1 java.io.Serializable getInfoFieldValue(osid.shared.Id infoFieldId)
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Get the InfoFields of the InfoRecords for this Asset that are based on this InfoStructure InfoPart Unique Id.
     [java] 840 COMMENT 0 @return infoPartId
     [java] 840 COMMENT 0 @throws osid.dr.DigitalRepositoryException An exception with one of the following messages defined in osid.dr.DigitalRepositoryException may be thrown: {@link osid.dr.DigitalRepositoryException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.dr.DigitalRepositoryException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.dr.DigitalRepositoryException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.dr.DigitalRepositoryException#UNIMPLEMENTED UNIMPLEMENTED}, {@link osid.dr.DigitalRepositoryException#NULL_ARGUMENT NULL_ARGUMENT}, {@link osid.dr.DigitalRepositoryException#UNKNOWN_ID UNKNOWN_ID}
     [java] 840 COMMENT 0 */
     [java] 220 METHOD 1 InfoFieldIterator getInfoFieldByPart(osid.shared.Id infoPartId)
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Get the Values of the InfoFields of the InfoRecords for this Asset that are based on this InfoStructure InfoPart Unique Id.
     [java] 840 COMMENT 0 @return infoPartId
     [java] 840 COMMENT 0 @throws osid.dr.DigitalRepositoryException An exception with one of the following messages defined in osid.dr.DigitalRepositoryException may be thrown: {@link osid.dr.DigitalRepositoryException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.dr.DigitalRepositoryException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.dr.DigitalRepositoryException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.dr.DigitalRepositoryException#UNIMPLEMENTED UNIMPLEMENTED}, {@link osid.dr.DigitalRepositoryException#NULL_ARGUMENT NULL_ARGUMENT}, {@link osid.dr.DigitalRepositoryException#UNKNOWN_ID UNKNOWN_ID}
     [java] 840 COMMENT 0 */
     [java] 220 METHOD 1 osid.shared.SerializableObjectIterator getInfoFieldValueByPart(osid.shared.Id infoPartId)
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Get the date at which this Asset is effective.  Note that this is separate for any authorization to get or update the Asset.
     [java] 840 COMMENT 0 @return java.util.Calendar
     [java] 840 COMMENT 0 @throws osid.dr.DigitalRepositoryException An exception with one of the following messages defined in osid.dr.DigitalRepositoryException may be thrown: {@link osid.dr.DigitalRepositoryException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.dr.DigitalRepositoryException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.dr.DigitalRepositoryException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.dr.DigitalRepositoryException#UNIMPLEMENTED UNIMPLEMENTED}
     [java] 840 COMMENT 0 */
     [java] 230 GET 1 java.util.Calendar EffectiveDate
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Update the date at which this Asset is effective.  Note that this is separate for any authorization to get or update the Asset.
     [java] 840 COMMENT 0 @param effectiveDate
     [java] 840 COMMENT 0 @throws osid.dr.DigitalRepositoryException An exception with one of the following messages defined in osid.dr.DigitalRepositoryException may be thrown: {@link osid.dr.DigitalRepositoryException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.dr.DigitalRepositoryException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.dr.DigitalRepositoryException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.dr.DigitalRepositoryException#UNIMPLEMENTED UNIMPLEMENTED}, {@link osid.dr.DigitalRepositoryException#NULL_ARGUMENT NULL_ARGUMENT}, {@link osid.dr.DigitalRepositoryException#EFFECTIVE_PRECEDE_EXPIRATION}
     [java] 840 COMMENT 0 */
     [java] 234 UPDATE 1 java.util.Calendar EffectiveDate
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Get the date at which this Asset expires.  Note that this is separate for any authorization to get or update the Asset.
     [java] 840 COMMENT 0 @return java.util.Calendar
     [java] 840 COMMENT 0 @throws osid.dr.DigitalRepositoryException An exception with one of the following messages defined in osid.dr.DigitalRepositoryException may be thrown: {@link osid.dr.DigitalRepositoryException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.dr.DigitalRepositoryException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.dr.DigitalRepositoryException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.dr.DigitalRepositoryException#UNIMPLEMENTED UNIMPLEMENTED}
     [java] 840 COMMENT 0 */
     [java] 230 GET 1 java.util.Calendar ExpirationDate
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Update the date at which this Asset expires.  Note that this is separate for any authorization to get or update the Asset.
     [java] 840 COMMENT 0 @param expirationDate
     [java] 840 COMMENT 0 @throws osid.dr.DigitalRepositoryException An exception with one of the following messages defined in osid.dr.DigitalRepositoryException may be thrown: {@link osid.dr.DigitalRepositoryException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.dr.DigitalRepositoryException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.dr.DigitalRepositoryException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.dr.DigitalRepositoryException#UNIMPLEMENTED UNIMPLEMENTED}, {@link osid.dr.DigitalRepositoryException#NULL_ARGUMENT NULL_ARGUMENT}, {@link osid.dr.DigitalRepositoryException#EFFECTIVE_PRECEDE_EXPIRATION}
     [java] 840 COMMENT 0 */
     [java] 234 UPDATE 1 java.util.Calendar ExpirationDate
     [java] 823 END 1 null
     [java] 822 BEGIN 0 null
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Each Asset has one of the AssetType supported by the DigitalRepository.  There are also zero or more InfoStructures required by the DigitalRepository for each AssetType. InfoStructures provide structural information.  The values for a given Asset's InfoStructure are stored in an InfoRecord.  InfoStructures can contain sub-elements which are referred to as InfoParts.  The structure defined in the InfoStructure and its InfoParts is used in for any InfoRecords for the Asset.  InfoRecords have InfoFields which parallel InfoParts.  <p>Licensed under the {@link osid.SidLicense MIT O.K.I&#46; SID Definition License}.
     [java] 840 COMMENT 0 <p>SID Version: 1.0 rc6<p>Licensed under the {@link osid.SidLicense MIT O.K.I&#46; SID Definition License}.
     [java] 840 COMMENT 0 */
     [java] 111 API_INTERFACE 1 InfoStructure
     [java] 120 EXTENDS 1 java.io.Serializable
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Get the name for this InfoStructure.
     [java] 840 COMMENT 0 @return String the name
     [java] 840 COMMENT 0 @throws osid.dr.DigitalRepositoryException An exception with one of the following messages defined in osid.dr.DigitalRepositoryException may be thrown: {@link osid.dr.DigitalRepositoryException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.dr.DigitalRepositoryException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.dr.DigitalRepositoryException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.dr.DigitalRepositoryException#UNIMPLEMENTED UNIMPLEMENTED}
     [java] 840 COMMENT 0 */
     [java] 230 GET 1 String DisplayName
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Get the description for this InfoStructure.
     [java] 840 COMMENT 0 @return String the name
     [java] 840 COMMENT 0 @throws osid.dr.DigitalRepositoryException An exception with one of the following messages defined in osid.dr.DigitalRepositoryException may be thrown: {@link osid.dr.DigitalRepositoryException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.dr.DigitalRepositoryException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.dr.DigitalRepositoryException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.dr.DigitalRepositoryException#UNIMPLEMENTED UNIMPLEMENTED}
     [java] 840 COMMENT 0 */
     [java] 230 GET 1 String Description
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Get the Unique Id for this InfoStructure.
     [java] 840 COMMENT 0 @return osid.shared.Id Unique Id this is usually set by a create method's implementation
     [java] 840 COMMENT 0 @throws osid.dr.DigitalRepositoryException An exception with one of the following messages defined in osid.dr.DigitalRepositoryException may be thrown: {@link osid.dr.DigitalRepositoryException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.dr.DigitalRepositoryException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.dr.DigitalRepositoryException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.dr.DigitalRepositoryException#UNIMPLEMENTED UNIMPLEMENTED}
     [java] 840 COMMENT 0 */
     [java] 230 GET 1 osid.shared.Id Id
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Get all the InfoParts in the InfoStructure.  Iterators return a group of items, one item at a time.  The Iterator's hasNext method returns <code>true</code> if there are additional objects available; <code>false</code> otherwise.  The Iterator's next method returns the next object.
     [java] 840 COMMENT 0 @return InfoPartIterator  The order of the objects returned by the Iterator is not guaranteed.
     [java] 840 COMMENT 0 @throws osid.dr.DigitalRepositoryException An exception with one of the following messages defined in osid.dr.DigitalRepositoryException may be thrown: {@link osid.dr.DigitalRepositoryException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.dr.DigitalRepositoryException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.dr.DigitalRepositoryException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.dr.DigitalRepositoryException#UNIMPLEMENTED UNIMPLEMENTED}
     [java] 840 COMMENT 0 */
     [java] 220 METHOD 1 public InfoPartIterator getInfoParts()
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Get the schema for this InfoStructure.  The schema is defined by the implementation, e.g. Dublin Core.
     [java] 840 COMMENT 0 @return String
     [java] 840 COMMENT 0 @throws osid.dr.DigitalRepositoryException An exception with one of the following messages defined in osid.dr.DigitalRepositoryException may be thrown: {@link osid.dr.DigitalRepositoryException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.dr.DigitalRepositoryException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.dr.DigitalRepositoryException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.dr.DigitalRepositoryException#UNIMPLEMENTED UNIMPLEMENTED}
     [java] 840 COMMENT 0 */
     [java] 230 GET 1 String Schema
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Get the format for this InfoStructure.  The format is defined by the implementation, e.g. XML.
     [java] 840 COMMENT 0 @return String
     [java] 840 COMMENT 0 @throws osid.dr.DigitalRepositoryException An exception with one of the following messages defined in osid.dr.DigitalRepositoryException may be thrown: {@link osid.dr.DigitalRepositoryException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.dr.DigitalRepositoryException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.dr.DigitalRepositoryException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.dr.DigitalRepositoryException#UNIMPLEMENTED UNIMPLEMENTED}
     [java] 840 COMMENT 0 */
     [java] 230 GET 1 String Format
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Validate an InfoRecord against its InfoStructure.  Return true if valid; false otherwise.  The status of the Asset holding this InfoRecord is not changed through this method.  The implementation may throw an Exception for any validation failures and use the Exception's message to identify specific causes.
     [java] 840 COMMENT 0 @param infoRecord
     [java] 840 COMMENT 0 @return boolean
     [java] 840 COMMENT 0 @throws osid.dr.DigitalRepositoryException An exception with one of the following messages defined in osid.dr.DigitalRepositoryException may be thrown: {@link osid.dr.DigitalRepositoryException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.dr.DigitalRepositoryException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.dr.DigitalRepositoryException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.dr.DigitalRepositoryException#UNIMPLEMENTED UNIMPLEMENTED}, {@link osid.dr.DigitalRepositoryException#NULL_ARGUMENT NULL_ARGUMENT}
     [java] 840 COMMENT 0 */
     [java] 220 METHOD 1 public boolean validateInfoRecord(InfoRecord infoRecord)
     [java] 823 END 1 null
     [java] 822 BEGIN 0 null
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Each Asset has one of the AssetType supported by the DigitalRepository.  There are also zero or more InfoStructures required by the DigitalRepository for each AssetType. InfoStructures provide structural information.  The values for a given Asset's InfoStructure are stored in an InfoRecord.  InfoStructures can contain sub-elements which are referred to as InfoParts.  The structure defined in the InfoStructure and its InfoParts is used in for any InfoRecords for the Asset.  InfoRecords have InfoFields which parallel InfoParts.  <p>Licensed under the {@link osid.SidLicense MIT O.K.I&#46; SID Definition License}.
     [java] 840 COMMENT 0 <p>SID Version: 1.0 rc6<p>Licensed under the {@link osid.SidLicense MIT O.K.I&#46; SID Definition License}.
     [java] 840 COMMENT 0 */
     [java] 111 API_INTERFACE 1 InfoPart
     [java] 120 EXTENDS 1 java.io.Serializable
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Get the name for this InfoPart.
     [java] 840 COMMENT 0 @return String the name
     [java] 840 COMMENT 0 @throws osid.dr.DigitalRepositoryException An exception with one of the following messages defined in osid.dr.DigitalRepositoryException may be thrown: {@link osid.dr.DigitalRepositoryException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.dr.DigitalRepositoryException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.dr.DigitalRepositoryException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.dr.DigitalRepositoryException#UNIMPLEMENTED UNIMPLEMENTED}
     [java] 840 COMMENT 0 */
     [java] 230 GET 1 String DisplayName
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Get the description for this InfoPart.
     [java] 840 COMMENT 0 @return String the name
     [java] 840 COMMENT 0 @throws osid.dr.DigitalRepositoryException An exception with one of the following messages defined in osid.dr.DigitalRepositoryException may be thrown: {@link osid.dr.DigitalRepositoryException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.dr.DigitalRepositoryException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.dr.DigitalRepositoryException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.dr.DigitalRepositoryException#UNIMPLEMENTED UNIMPLEMENTED}
     [java] 840 COMMENT 0 */
     [java] 230 GET 1 String Description
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Get the Unique Id for this InfoPart.
     [java] 840 COMMENT 0 @return osid.shared.Id Unique Id this is usually set by a create method's implementation
     [java] 840 COMMENT 0 @throws osid.dr.DigitalRepositoryException An exception with one of the following messages defined in osid.dr.DigitalRepositoryException may be thrown: {@link osid.dr.DigitalRepositoryException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.dr.DigitalRepositoryException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.dr.DigitalRepositoryException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.dr.DigitalRepositoryException#UNIMPLEMENTED UNIMPLEMENTED}
     [java] 840 COMMENT 0 */
     [java] 230 GET 1 osid.shared.Id Id
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Get all the InfoParts in the InfoPart.  Iterators return a group of items, one item at a time.  The Iterator's hasNext method returns <code>true</code> if there are additional objects available; <code>false</code> otherwise.  The Iterator's next method returns the next object.
     [java] 840 COMMENT 0 @return InfoPartIterator  The order of the objects returned by the Iterator is not guaranteed.
     [java] 840 COMMENT 0 @throws osid.dr.DigitalRepositoryException An exception with one of the following messages defined in osid.dr.DigitalRepositoryException may be thrown: {@link osid.dr.DigitalRepositoryException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.dr.DigitalRepositoryException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.dr.DigitalRepositoryException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.dr.DigitalRepositoryException#UNIMPLEMENTED UNIMPLEMENTED}
     [java] 840 COMMENT 0 */
     [java] 220 METHOD 1 public InfoPartIterator getInfoParts()
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Return true if this InfoPart is automatically populated by the DigitalRepository; false otherwise.  Examples of the kind of InfoParts that might be populated are a time-stamp or the Agent setting the data.
     [java] 840 COMMENT 0 @return boolean
     [java] 840 COMMENT 0 @throws osid.dr.DigitalRepositoryException An exception with one of the following messages defined in osid.dr.DigitalRepositoryException may be thrown: {@link osid.dr.DigitalRepositoryException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.dr.DigitalRepositoryException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.dr.DigitalRepositoryException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.dr.DigitalRepositoryException#UNIMPLEMENTED UNIMPLEMENTED}
     [java] 840 COMMENT 0 */
     [java] 230 GET 1 boolean PopulatedByDR
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Return true if this InfoPart is mandatory; false otherwise.
     [java] 840 COMMENT 0 @return boolean
     [java] 840 COMMENT 0 @throws osid.dr.DigitalRepositoryException An exception with one of the following messages defined in osid.dr.DigitalRepositoryException may be thrown: {@link osid.dr.DigitalRepositoryException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.dr.DigitalRepositoryException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.dr.DigitalRepositoryException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.dr.DigitalRepositoryException#UNIMPLEMENTED UNIMPLEMENTED}
     [java] 840 COMMENT 0 */
     [java] 230 GET 1 boolean Mandatory
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Return true if this InfoPart is repeatable; false otherwise.
     [java] 840 COMMENT 0 @return boolean
     [java] 840 COMMENT 0 @throws osid.dr.DigitalRepositoryException An exception with one of the following messages defined in osid.dr.DigitalRepositoryException may be thrown: {@link osid.dr.DigitalRepositoryException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.dr.DigitalRepositoryException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.dr.DigitalRepositoryException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.dr.DigitalRepositoryException#UNIMPLEMENTED UNIMPLEMENTED}
     [java] 840 COMMENT 0 */
     [java] 230 GET 1 boolean Repeatable
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Get the InfoPart associated with this InfoStructure.
     [java] 840 COMMENT 0 @return InfoStructure
     [java] 840 COMMENT 0 @throws osid.dr.DigitalRepositoryException An exception with one of the following messages defined in osid.dr.DigitalRepositoryException may be thrown: {@link osid.dr.DigitalRepositoryException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.dr.DigitalRepositoryException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.dr.DigitalRepositoryException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.dr.DigitalRepositoryException#UNIMPLEMENTED UNIMPLEMENTED}
     [java] 840 COMMENT 0 */
     [java] 230 GET 1 InfoStructure InfoStructure
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Validate an InfoField against its InfoPart.  Return true if valid; false otherwise.  The status of the Asset holding this InfoRecord is not changed through this method.  The implementation may throw an Exception for any validation failures and use the Exception's message to identify specific causes.
     [java] 840 COMMENT 0 @param infoField
     [java] 840 COMMENT 0 @return boolean
     [java] 840 COMMENT 0 @throws osid.dr.DigitalRepositoryException An exception with one of the following messages defined in osid.dr.DigitalRepositoryException may be thrown: {@link osid.dr.DigitalRepositoryException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.dr.DigitalRepositoryException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.dr.DigitalRepositoryException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.dr.DigitalRepositoryException#UNIMPLEMENTED UNIMPLEMENTED}, {@link osid.dr.DigitalRepositoryException#NULL_ARGUMENT NULL_ARGUMENT}
     [java] 840 COMMENT 0 */
     [java] 220 METHOD 1 public boolean validateInfoField(InfoField infoField)
     [java] 823 END 1 null
     [java] 822 BEGIN 0 null
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Each Asset has one of the AssetType supported by the DigitalRepository.  There are also zero or more InfoStructures required by the DigitalRepository for each AssetType. InfoStructures provide structural information.  The values for a given Asset's InfoStructure are stored in an InfoRecord.  InfoStructures can contain sub-elements which are referred to as InfoParts.  The structure defined in the InfoStructure and its InfoParts is used in for any InfoRecords for the Asset.  InfoRecords have InfoFields which parallel InfoParts.  <p>Licensed under the {@link osid.SidLicense MIT O.K.I&#46; SID Definition License}.
     [java] 840 COMMENT 0 <p>SID Version: 1.0 rc6<p>Licensed under the {@link osid.SidLicense MIT O.K.I&#46; SID Definition License}.
     [java] 840 COMMENT 0 */
     [java] 111 API_INTERFACE 1 InfoRecord
     [java] 120 EXTENDS 1 java.io.Serializable
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Get the Unique Id for this InfoRecord.
     [java] 840 COMMENT 0 @return osid.shared.Id Unique Id this is usually set by a create method's implementation
     [java] 840 COMMENT 0 @throws osid.dr.DigitalRepositoryException An exception with one of the following messages defined in osid.dr.DigitalRepositoryException may be thrown: {@link osid.dr.DigitalRepositoryException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.dr.DigitalRepositoryException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.dr.DigitalRepositoryException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.dr.DigitalRepositoryException#UNIMPLEMENTED UNIMPLEMENTED}
     [java] 840 COMMENT 0 */
     [java] 230 GET 1 osid.shared.Id Id
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Create an InfoField.  InfoRecords are composed of InfoFields. InfoFields can also contain other InfoFields.  Each InfoRecord is associated with a specific InfoStructure and each InfoField is associated with a specific InfoPart.
     [java] 840 COMMENT 0 @param infoPartId
     [java] 840 COMMENT 0 @param value
     [java] 840 COMMENT 0 @return InfoField
     [java] 840 COMMENT 0 @throws osid.dr.DigitalRepositoryException An exception with one of the following messages defined in osid.dr.DigitalRepositoryException may be thrown: {@link osid.dr.DigitalRepositoryException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.dr.DigitalRepositoryException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.dr.DigitalRepositoryException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.dr.DigitalRepositoryException#UNIMPLEMENTED UNIMPLEMENTED}, {@link osid.dr.DigitalRepositoryException#NULL_ARGUMENT NULL_ARGUMENT}, {@link osid.dr.DigitalRepositoryException#UNKNOWN_ID UNKNOWN_ID}
     [java] 840 COMMENT 0 */
     [java] 220 METHOD 1 public InfoField createInfoField(osid.shared.Id infoPartId, java.io.Serializable value)
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Delete an InfoField and all its InfoFields.
     [java] 840 COMMENT 0 @param infoFieldId
     [java] 840 COMMENT 0 @throws osid.dr.DigitalRepositoryException An exception with one of the following messages defined in osid.dr.DigitalRepositoryException may be thrown: {@link osid.dr.DigitalRepositoryException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.dr.DigitalRepositoryException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.dr.DigitalRepositoryException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.dr.DigitalRepositoryException#UNIMPLEMENTED UNIMPLEMENTED}, {@link osid.dr.DigitalRepositoryException#NULL_ARGUMENT NULL_ARGUMENT}, {@link osid.dr.DigitalRepositoryException#UNKNOWN_ID UNKNOWN_ID}
     [java] 840 COMMENT 0 */
     [java] 220 METHOD 1 public void deleteInfoField(osid.shared.Id infoFieldId)
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Get all the InfoFields in the InfoRecord.  Iterators return a group of items, one item at a time.  The Iterator's hasNext method returns <code>true</code> if there are additional objects available; <code>false</code> otherwise.  The Iterator's next method returns the next object.
     [java] 840 COMMENT 0 @return InfoFieldIterator  The order of the objects returned by the Iterator is not guaranteed.
     [java] 840 COMMENT 0 @throws osid.dr.DigitalRepositoryException An exception with one of the following messages defined in osid.dr.DigitalRepositoryException may be thrown: {@link osid.dr.DigitalRepositoryException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.dr.DigitalRepositoryException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.dr.DigitalRepositoryException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.dr.DigitalRepositoryException#UNIMPLEMENTED UNIMPLEMENTED}
     [java] 840 COMMENT 0 */
     [java] 220 METHOD 1 public InfoFieldIterator getInfoFields()
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Return true if this InfoRecord is multi-valued; false otherwise.  This is determined by the implementation.
     [java] 840 COMMENT 0 @return boolean
     [java] 840 COMMENT 0 @throws osid.dr.DigitalRepositoryException An exception with one of the following messages defined in osid.dr.DigitalRepositoryException may be thrown: {@link osid.dr.DigitalRepositoryException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.dr.DigitalRepositoryException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.dr.DigitalRepositoryException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.dr.DigitalRepositoryException#UNIMPLEMENTED UNIMPLEMENTED}
     [java] 840 COMMENT 0 */
     [java] 230 GET 1 boolean Multivalued
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Get the InfoStructure associated with this InfoRecord.
     [java] 840 COMMENT 0 @return InfoStructure
     [java] 840 COMMENT 0 @throws osid.dr.DigitalRepositoryException An exception with one of the following messages defined in osid.dr.DigitalRepositoryException may be thrown: {@link osid.dr.DigitalRepositoryException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.dr.DigitalRepositoryException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.dr.DigitalRepositoryException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.dr.DigitalRepositoryException#UNIMPLEMENTED UNIMPLEMENTED}
     [java] 840 COMMENT 0 */
     [java] 220 METHOD 1 InfoStructure  getInfoStructure()
     [java] 823 END 1 null
     [java] 822 BEGIN 0 null
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Each Asset has one of the AssetType supported by the DigitalRepository.  There are also zero or more InfoStructures required by the DigitalRepository for each AssetType. InfoStructures provide structural information.  The values for a given Asset's InfoStructure are stored in an InfoRecord.  InfoStructures can contain sub-elements which are referred to as InfoParts.  The structure defined in the InfoStructure and its InfoParts is used in for any InfoRecords for the Asset.  InfoRecords have InfoFields which parallel InfoParts.  <p>Licensed under the {@link osid.SidLicense MIT O.K.I&#46; SID Definition License}.
     [java] 840 COMMENT 0 <p>SID Version: 1.0 rc6<p>Licensed under the {@link osid.SidLicense MIT O.K.I&#46; SID Definition License}.
     [java] 840 COMMENT 0 */
     [java] 111 API_INTERFACE 1 InfoField
     [java] 120 EXTENDS 1 java.io.Serializable
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Get the Unique Id for this InfoStructure.
     [java] 840 COMMENT 0 @return osid.shared.Id Unique Id this is usually set by a create method's implementation
     [java] 840 COMMENT 0 @throws osid.dr.DigitalRepositoryException An exception with one of the following messages defined in osid.dr.DigitalRepositoryException may be thrown: {@link osid.dr.DigitalRepositoryException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.dr.DigitalRepositoryException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.dr.DigitalRepositoryException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.dr.DigitalRepositoryException#UNIMPLEMENTED UNIMPLEMENTED}
     [java] 840 COMMENT 0 */
     [java] 230 GET 1 osid.shared.Id Id
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Create an InfoField.  InfoRecords are composed of InfoFields. InfoFields can also contain other InfoFields.  Each InfoRecord is associated with a specific InfoStructure and each InfoField is associated with a specific InfoPart.
     [java] 840 COMMENT 0  infoPartId
     [java] 840 COMMENT 0  value
     [java] 840 COMMENT 0 @return InfoField
     [java] 840 COMMENT 0 @throws osid.dr.DigitalRepositoryException An exception with one of the following messages defined in osid.dr.DigitalRepositoryException may be thrown: {@link osid.dr.DigitalRepositoryException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.dr.DigitalRepositoryException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.dr.DigitalRepositoryException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.dr.DigitalRepositoryException#UNIMPLEMENTED UNIMPLEMENTED}, {@link osid.dr.DigitalRepositoryException#NULL_ARGUMENT NULL_ARGUMENT}, {@link osid.dr.DigitalRepositoryException#UNKNOWN_ID UNKNOWN_ID}
     [java] 840 COMMENT 0 */
     [java] 220 METHOD 1 public InfoField createInfoField(osid.shared.Id infoPartId, java.io.Serializable value)
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Delete an InfoField and all its InfoFields.
     [java] 840 COMMENT 0  infoFieldId
     [java] 840 COMMENT 0 @throws osid.dr.DigitalRepositoryException An exception with one of the following messages defined in osid.dr.DigitalRepositoryException may be thrown: {@link osid.dr.DigitalRepositoryException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.dr.DigitalRepositoryException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.dr.DigitalRepositoryException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.dr.DigitalRepositoryException#UNIMPLEMENTED UNIMPLEMENTED}, {@link osid.dr.DigitalRepositoryException#NULL_ARGUMENT NULL_ARGUMENT}, {@link osid.dr.DigitalRepositoryException#UNKNOWN_ID UNKNOWN_ID}
     [java] 840 COMMENT 0 */
     [java] 220 METHOD 1 public void deleteInfoField(osid.shared.Id infoFieldId)
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Get all the InfoFields in the InfoField.  Iterators return a group of items, one item at a time.  The Iterator's hasNext method returns <code>true</code> if there are additional objects available; <code>false</code> otherwise.  The Iterator's next method returns the next object.
     [java] 840 COMMENT 0 @return InfoFieldIterator  The order of the objects returned by the Iterator is not guaranteed.
     [java] 840 COMMENT 0 @throws osid.dr.DigitalRepositoryException An exception with one of the following messages defined in osid.dr.DigitalRepositoryException may be thrown: {@link osid.dr.DigitalRepositoryException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.dr.DigitalRepositoryException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.dr.DigitalRepositoryException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.dr.DigitalRepositoryException#UNIMPLEMENTED UNIMPLEMENTED}
     [java] 840 COMMENT 0 */
     [java] 220 METHOD 1 public InfoFieldIterator getInfoFields()
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Get the for this InfoField.
     [java] 840 COMMENT 0 @return java.io.Serializable
     [java] 840 COMMENT 0 @throws osid.dr.DigitalRepositoryException An exception with one of the following messages defined in osid.dr.DigitalRepositoryException may be thrown: {@link osid.dr.DigitalRepositoryException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.dr.DigitalRepositoryException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.dr.DigitalRepositoryException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.dr.DigitalRepositoryException#UNIMPLEMENTED UNIMPLEMENTED}
     [java] 840 COMMENT 0 */
     [java] 220 METHOD 1 public java.io.Serializable getValue()
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Update the for this InfoField.
     [java] 840 COMMENT 0 null
     [java] 840 COMMENT 0 @throws osid.dr.DigitalRepositoryException An exception with one of the following messages defined in osid.dr.DigitalRepositoryException may be thrown: {@link osid.dr.DigitalRepositoryException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.dr.DigitalRepositoryException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.dr.DigitalRepositoryException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.dr.DigitalRepositoryException#UNIMPLEMENTED UNIMPLEMENTED}, {@link osid.dr.DigitalRepositoryException#NULL_ARGUMENT NULL_ARGUMENT}
     [java] 840 COMMENT 0 */
     [java] 220 METHOD 1 public void updateValue(java.io.Serializable value)
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Get the InfoPart associated with this InfoField.
     [java] 840 COMMENT 0 @return InfoPart
     [java] 840 COMMENT 0 @throws osid.dr.DigitalRepositoryException An exception with one of the following messages defined in osid.dr.DigitalRepositoryException may be thrown: {@link osid.dr.DigitalRepositoryException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.dr.DigitalRepositoryException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.dr.DigitalRepositoryException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.dr.DigitalRepositoryException#UNIMPLEMENTED UNIMPLEMENTED}
     [java] 840 COMMENT 0 */
     [java] 230 GET 1 InfoPart InfoPart
     [java] 823 END 1 null
     [java] 822 BEGIN 0 null
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 DigitalRepositoryIterator provides access to these objects sequentially, one at a time.  The purpose of all Iterators is to to offer a way for OSID methods to return multiple values of a common type and not use an array.  Returning an array may not be appropriate if the number of values returned is large or is fetched remotely.  Iterators do not allow access to values by index, rather you must access values in sequence. Similarly, there is no way to go backwards through the sequence unless you place the values in a data structure, such as an array, that allows for access by index.
     [java] 840 COMMENT 0 <p>SID Version: 1.0 rc6<p>Licensed under the {@link osid.SidLicense MIT O.K.I&#46; SID Definition License}.
     [java] 840 COMMENT 0 */
     [java] 111 API_INTERFACE 1 DigitalRepositoryIterator
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Return <code>true</code> if there are additional  DigitalRepositories ; <code>false</code> otherwise.
     [java] 840 COMMENT 0 @return boolean
     [java] 840 COMMENT 0 @throws osid.dr.DigitalRepositoryException An exception with one of the following messages defined in osid.dr.DigitalRepositoryException may be thrown: {@link osid.dr.DigitalRepositoryException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.dr.DigitalRepositoryException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.dr.DigitalRepositoryException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.dr.DigitalRepositoryException#UNIMPLEMENTED UNIMPLEMENTED}
     [java] 840 COMMENT 0 */
     [java] 220 METHOD 1 boolean hasNext()
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Return the next DigitalRepositories.
     [java] 840 COMMENT 0 @return DigitalRepository
     [java] 840 COMMENT 0 @throws osid.dr.DigitalRepositoryException An exception with one of the following messages defined in osid.dr.DigitalRepositoryException may be thrown: {@link osid.dr.DigitalRepositoryException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.dr.DigitalRepositoryException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.dr.DigitalRepositoryException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.dr.DigitalRepositoryException#UNIMPLEMENTED UNIMPLEMENTED}, {@link osid.dr.DigitalRepositoryException#NO_MORE_ITERATOR_ELEMENTS NO_MORE_ITERATOR_ELEMENTS}
     [java] 840 COMMENT 0 */
     [java] 220 METHOD 1 DigitalRepository next()
     [java] 823 END 1 null
     [java] 822 BEGIN 0 null
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 AssetIterator provides access to these objects sequentially, one at a time.  The purpose of all Iterators is to to offer a way for OSID methods to return multiple values of a common type and not use an array.  Returning an array may not be appropriate if the number of values returned is large or is fetched remotely.  Iterators do not allow access to values by index, rather you must access values in sequence. Similarly, there is no way to go backwards through the sequence unless you place the values in a data structure, such as an array, that allows for access by index.
     [java] 840 COMMENT 0 <p>SID Version: 1.0 rc6<p>Licensed under the {@link osid.SidLicense MIT O.K.I&#46; SID Definition License}.
     [java] 840 COMMENT 0 */
     [java] 111 API_INTERFACE 1 AssetIterator
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Return <code>true</code> if there are additional  Assets ; <code>false</code> otherwise.
     [java] 840 COMMENT 0 @return boolean
     [java] 840 COMMENT 0 @throws osid.dr.DigitalRepositoryException An exception with one of the following messages defined in osid.dr.DigitalRepositoryException may be thrown: {@link osid.dr.DigitalRepositoryException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.dr.DigitalRepositoryException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.dr.DigitalRepositoryException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.dr.DigitalRepositoryException#UNIMPLEMENTED UNIMPLEMENTED}
     [java] 840 COMMENT 0 */
     [java] 220 METHOD 1 boolean hasNext()
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Return the next Assets.
     [java] 840 COMMENT 0 @return Asset
     [java] 840 COMMENT 0 @throws osid.dr.DigitalRepositoryException An exception with one of the following messages defined in osid.dr.DigitalRepositoryException may be thrown: {@link osid.dr.DigitalRepositoryException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.dr.DigitalRepositoryException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.dr.DigitalRepositoryException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.dr.DigitalRepositoryException#UNIMPLEMENTED UNIMPLEMENTED}, {@link osid.dr.DigitalRepositoryException#NO_MORE_ITERATOR_ELEMENTS NO_MORE_ITERATOR_ELEMENTS}
     [java] 840 COMMENT 0 */
     [java] 220 METHOD 1 Asset next()
     [java] 823 END 1 null
     [java] 822 BEGIN 0 null
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 InfoStructureIterator provides access to these objects sequentially, one at a time.  The purpose of all Iterators is to to offer a way for OSID methods to return multiple values of a common type and not use an array.  Returning an array may not be appropriate if the number of values returned is large or is fetched remotely.  Iterators do not allow access to values by index, rather you must access values in sequence. Similarly, there is no way to go backwards through the sequence unless you place the values in a data structure, such as an array, that allows for access by index.
     [java] 840 COMMENT 0 <p>SID Version: 1.0 rc6<p>Licensed under the {@link osid.SidLicense MIT O.K.I&#46; SID Definition License}.
     [java] 840 COMMENT 0 */
     [java] 111 API_INTERFACE 1 InfoStructureIterator
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Return <code>true</code> if there are additional  Assets ; <code>false</code> otherwise.
     [java] 840 COMMENT 0 @return boolean
     [java] 840 COMMENT 0 @throws osid.dr.DigitalRepositoryException An exception with one of the following messages defined in osid.dr.DigitalRepositoryException may be thrown: {@link osid.dr.DigitalRepositoryException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.dr.DigitalRepositoryException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.dr.DigitalRepositoryException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.dr.DigitalRepositoryException#UNIMPLEMENTED UNIMPLEMENTED}
     [java] 840 COMMENT 0 */
     [java] 220 METHOD 1 boolean hasNext()
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Return the next InfoStructures.
     [java] 840 COMMENT 0 @return InfoStructure
     [java] 840 COMMENT 0 @throws osid.dr.DigitalRepositoryException An exception with one of the following messages defined in osid.dr.DigitalRepositoryException may be thrown: {@link osid.dr.DigitalRepositoryException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.dr.DigitalRepositoryException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.dr.DigitalRepositoryException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.dr.DigitalRepositoryException#UNIMPLEMENTED UNIMPLEMENTED}, {@link osid.dr.DigitalRepositoryException#NO_MORE_ITERATOR_ELEMENTS NO_MORE_ITERATOR_ELEMENTS}
     [java] 840 COMMENT 0 */
     [java] 220 METHOD 1 InfoStructure next()
     [java] 823 END 1 null
     [java] 822 BEGIN 0 null
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 InfoPartIterator provides access to these objects sequentially, one at a time.  The purpose of all Iterators is to to offer a way for OSID methods to return multiple values of a common type and not use an array.  Returning an array may not be appropriate if the number of values returned is large or is fetched remotely.  Iterators do not allow access to values by index, rather you must access values in sequence. Similarly, there is no way to go backwards through the sequence unless you place the values in a data structure, such as an array, that allows for access by index.
     [java] 840 COMMENT 0 <p>SID Version: 1.0 rc6<p>Licensed under the {@link osid.SidLicense MIT O.K.I&#46; SID Definition License}.
     [java] 840 COMMENT 0 */
     [java] 111 API_INTERFACE 1 InfoPartIterator
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Return <code>true</code> if there are additional  InfoParts ; <code>false</code> otherwise.
     [java] 840 COMMENT 0 @return boolean
     [java] 840 COMMENT 0 @throws osid.dr.DigitalRepositoryException An exception with one of the following messages defined in osid.dr.DigitalRepositoryException may be thrown: {@link osid.dr.DigitalRepositoryException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.dr.DigitalRepositoryException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.dr.DigitalRepositoryException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.dr.DigitalRepositoryException#UNIMPLEMENTED UNIMPLEMENTED}
     [java] 840 COMMENT 0 */
     [java] 220 METHOD 1 boolean hasNext()
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Return the next InfoParts.
     [java] 840 COMMENT 0 @return InfoPart
     [java] 840 COMMENT 0 @throws osid.dr.DigitalRepositoryException An exception with one of the following messages defined in osid.dr.DigitalRepositoryException may be thrown: {@link osid.dr.DigitalRepositoryException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.dr.DigitalRepositoryException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.dr.DigitalRepositoryException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.dr.DigitalRepositoryException#UNIMPLEMENTED UNIMPLEMENTED}, {@link osid.dr.DigitalRepositoryException#NO_MORE_ITERATOR_ELEMENTS NO_MORE_ITERATOR_ELEMENTS}
     [java] 840 COMMENT 0 */
     [java] 220 METHOD 1 InfoPart next()
     [java] 823 END 1 null
     [java] 822 BEGIN 0 null
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 InfoRecordIterator provides access to these objects sequentially, one at a time.  The purpose of all Iterators is to to offer a way for OSID methods to return multiple values of a common type and not use an array.  Returning an array may not be appropriate if the number of values returned is large or is fetched remotely.  Iterators do not allow access to values by index, rather you must access values in sequence. Similarly, there is no way to go backwards through the sequence unless you place the values in a data structure, such as an array, that allows for access by index.
     [java] 840 COMMENT 0 <p>SID Version: 1.0 rc6<p>Licensed under the {@link osid.SidLicense MIT O.K.I&#46; SID Definition License}.
     [java] 840 COMMENT 0 */
     [java] 111 API_INTERFACE 1 InfoRecordIterator
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Return <code>true</code> if there are additional  InfoRecords ; <code>false</code> otherwise.
     [java] 840 COMMENT 0 @return boolean
     [java] 840 COMMENT 0 @throws osid.dr.DigitalRepositoryException An exception with one of the following messages defined in osid.dr.DigitalRepositoryException may be thrown: {@link osid.dr.DigitalRepositoryException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.dr.DigitalRepositoryException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.dr.DigitalRepositoryException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.dr.DigitalRepositoryException#UNIMPLEMENTED UNIMPLEMENTED}
     [java] 840 COMMENT 0 */
     [java] 220 METHOD 1 boolean hasNext()
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Return the next InfoRecords.
     [java] 840 COMMENT 0 @return InfoRecord
     [java] 840 COMMENT 0 @throws osid.dr.DigitalRepositoryException An exception with one of the following messages defined in osid.dr.DigitalRepositoryException may be thrown: {@link osid.dr.DigitalRepositoryException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.dr.DigitalRepositoryException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.dr.DigitalRepositoryException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.dr.DigitalRepositoryException#UNIMPLEMENTED UNIMPLEMENTED}, {@link osid.dr.DigitalRepositoryException#NO_MORE_ITERATOR_ELEMENTS NO_MORE_ITERATOR_ELEMENTS}
     [java] 840 COMMENT 0 */
     [java] 220 METHOD 1 InfoRecord next()
     [java] 823 END 1 null
     [java] 822 BEGIN 0 null
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 InfoFieldIterator provides access to these objects sequentially, one at a time.  The purpose of all Iterators is to to offer a way for OSID methods to return multiple values of a common type and not use an array.  Returning an array may not be appropriate if the number of values returned is large or is fetched remotely.  Iterators do not allow access to values by index, rather you must access values in sequence. Similarly, there is no way to go backwards through the sequence unless you place the values in a data structure, such as an array, that allows for access by index.
     [java] 840 COMMENT 0 <p>SID Version: 1.0 rc6<p>Licensed under the {@link osid.SidLicense MIT O.K.I&#46; SID Definition License}.
     [java] 840 COMMENT 0 */
     [java] 111 API_INTERFACE 1 InfoFieldIterator
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Return <code>true</code> if there are additional  InfoFields ; <code>false</code> otherwise.
     [java] 840 COMMENT 0 @return boolean
     [java] 840 COMMENT 0 @throws osid.dr.DigitalRepositoryException An exception with one of the following messages defined in osid.dr.DigitalRepositoryException may be thrown: {@link osid.dr.DigitalRepositoryException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.dr.DigitalRepositoryException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.dr.DigitalRepositoryException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.dr.DigitalRepositoryException#UNIMPLEMENTED UNIMPLEMENTED}
     [java] 840 COMMENT 0 */
     [java] 220 METHOD 1 boolean hasNext()
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Return the next InfoFields.
     [java] 840 COMMENT 0 @return InfoField
     [java] 840 COMMENT 0 @throws osid.dr.DigitalRepositoryException An exception with one of the following messages defined in osid.dr.DigitalRepositoryException may be thrown: {@link osid.dr.DigitalRepositoryException#OPERATION_FAILED OPERATION_FAILED}, {@link osid.dr.DigitalRepositoryException#PERMISSION_DENIED PERMISSION_DENIED}, {@link osid.dr.DigitalRepositoryException#CONFIGURATION_ERROR CONFIGURATION_ERROR}, {@link osid.dr.DigitalRepositoryException#UNIMPLEMENTED UNIMPLEMENTED}, {@link osid.dr.DigitalRepositoryException#NO_MORE_ITERATOR_ELEMENTS NO_MORE_ITERATOR_ELEMENTS}
     [java] 840 COMMENT 0 */
     [java] 220 METHOD 1 InfoField next()
     [java] 823 END 1 null
     [java] 822 BEGIN 0 null
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 All methods of all interfaces of the Open Service Interface Definition (OSID) throw a subclass of osid.OsidException. This requires the caller of an osid package method handle the OsidException. Since the application using an OsidManager can not determine where the implementation will ultimately execute, it must assume a worst case scenario and protect itself.
     [java] 840 COMMENT 0 <p>SID Version: 1.0 rc6<p>Licensed under the {@link osid.SidLicense MIT O.K.I&#46; SID Definition License}.
     [java] 840 COMMENT 0 */
     [java] 100 CLASS 1 DigitalRepositoryException
     [java] 120 EXTENDS 1 osid.OsidException
     [java] 123 THROWS_NOTHING 1 null
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Unknown or unsupported Type
     [java] 840 COMMENT 0 */
     [java] 150 DECLARE 1 public static final String UNKNOWN_TYPE = "Unknown Type "
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Unknown Id
     [java] 840 COMMENT 0 */
     [java] 150 DECLARE 1 public static final String UNKNOWN_ID = "Unknown Id "
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Unknown Digital Repository
     [java] 840 COMMENT 0 */
     [java] 150 DECLARE 1 public static final String UNKNOWN_DR = "Unknown Digital Repository "
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Operation failed
     [java] 840 COMMENT 0 */
     [java] 150 DECLARE 1 public static final String OPERATION_FAILED = "Operation failed "
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 No object has this date
     [java] 840 COMMENT 0 */
     [java] 150 DECLARE 1 public static final String NO_OBJECT_WITH_THIS_DATE = "No object has this date "
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Object already added
     [java] 840 COMMENT 0 */
     [java] 150 DECLARE 1 public static final String ALREADY_ADDED = "Object already added "
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Cannot copy or inherit InfoStructure from itself
     [java] 840 COMMENT 0 */
     [java] 150 DECLARE 1 public static final String CANNOT_COPY_OR_INHERIT_SELF = "Cannot copy or inherit InfoStructure from itself "
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Already inheriting this InfoStructure
     [java] 840 COMMENT 0 */
     [java] 150 DECLARE 1 public static final String ALREADY_INHERITING_STRUCTURE = "Already inheriting this InfoStructure "
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Iterator has no more elements
     [java] 840 COMMENT 0 */
     [java] 150 DECLARE 1 public static final String NO_MORE_ITERATOR_ELEMENTS = "Iterator has no more elements "
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Permission denied
     [java] 840 COMMENT 0 */
     [java] 150 DECLARE 1 public static final String PERMISSION_DENIED = "Permission denied "
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Null argument
     [java] 840 COMMENT 0 */
     [java] 150 DECLARE 1 public static final String NULL_ARGUMENT = "Null argument "
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Configuration error
     [java] 840 COMMENT 0 */
     [java] 150 DECLARE 1 public static final String CONFIGURATION_ERROR = "Configuration error "
     [java] 840 COMMENT 0 /**
     [java] 840 COMMENT 0 Effective date must precede expiration date
     [java] 840 COMMENT 0 */
     [java] 150 DECLARE 1 public static final String EFFECTIVE_PRECEDE_EXPIRATION = "Effective date must precede expiration date "
     [java] 200 CONSTRUCTOR 1 String message
     [java] 201 CONSTRUCTOR_LINE 1 super( message );
     [java] 823 END 1 null
